!BAT
#-#+ FATLFN.LLL v0.2 (20241023), by deomsh
#-#+ Function: to make Grubutil FAT compatible with Long File Names
#-#+ Available functions: mkfile, mkdir, ren, del, copy, dir. Extra: dirx, dellfn
#-#+ Use: FATLFN.LLL mkdir FILE
#-#+ Use: FATLFN.LLL mkfile size=N FILE
#-#+ Use: FATLFN.LLL ren FILE1 [PATH]file2
#-#+ Use: FATLFN.LLL copy [/o:r] [/a] FILE1 DEVICE2/PATH2/[file2]
#-#+ Use: FATLFN.LLL del [/r] FILE
#-#+ Use: FATLFN.LLL dir [/a[-]adrsh] [DEVICE]/[PATH[/]]
#-#+ Use: FATLFN.LLL dirx [/a[-]adrsh] [DEVICE]/[PATH[/]]
#NOTANYMORE##-# Use: FATLFN.LLL <makelfn> FILE lfn
#-# Use: FATLFN.LLL dellfn FILE
#NOT#-## Use: FATLFN.LLL mkfs [/A:sectorsize] DEVICE
#NOT#-## Use: FATLFN.LLL info DEVICE
#-#+ Use: FATLFN.LLL for some help (more with 'help' - without quotes)
#-#+ Mandatory Arguments: FILE, without DEVICE/ PATH on ROOT: '/'. Except <copy>: source FAT only
#-#+ Optional Arguments: size=N => number of bytes, takes Nk/ Nm/ Ng bytes; /o => overwrite; /o:r => overwrite read-only files; /a => copy attributes; /r => delete read-only folders/ files; /a:[-]adrsh => selected attributes [not]only
#-#+ Remark: Needed Loosely Linked Library ATTRIBFT.LLL - must be in same folder as FATLFN.LLL, or already loaded with insmod (NO change of name allowed)
#-#+ Remark <ren>: If Short File Name is renamed to Long File Name, Long File Name is added (if none exist). If Long File Name is renamed to associated Short File Name, Long File Name is removed, excpet if NOT PATH1=PATH2 (use <dirx> before to check). If 8+3 Short File Name, not fully highcase = LFN is renamed to same name in HIGHCASE, 8+3 LFN is removed - and the other way round if 8+3 LFN, not fully HIGHCASE, is added
#-#+ Remark <copy>: with /o:r ALL found attributes on read-only target file will be restored after copying. With /a ALL attributes found on source file will be set on target-file after copying (FAT-source only!)
#NOT#-## Remark <makelfn>: Short File Name in FILE must exist, NO check if Short File Name is subset of added Long File Name!
if "%~1"=="" && echo && call :help "smallhelp" &; echo && goto :eof
if /i "%~1"=="help" && goto :help
#ORG#if "%~1"=="/?" && goto :help
if not /i "%~1"=="mkdir" && if not /i "%~1"=="copy" && if not /i "%~1"=="ren" && if not /i "%~1"=="del" && if not /i "%~1"=="mkfile" && if not /i "%~1"=="dir" && if not /i "%~1"=="dirx" && if not /i "%~1"=="dellfn" && echo && call :help "smallhelp" &; echo && goto :eof
debug 1
debug msg=0
delmod -l fat > nul || insmod %~0dpfat > nul || insmod /fat > nul || insmod (bd)/boot/grub/fat > nul || insmod (bd)/fat > nul || insmod (bd)/grub/fat > nul || insmod (bd)/g4dll/fat > nul || insmod %@root%/fat > nul || echo -e \x20Grubutil FAT needed in (bd), (bd)/boot/grub, (bd)/grub, (bd)/g4dll or current or root directory" && goto :eov
delmod -l ATTRIBFT.LLL > nul || insmod %~0dpATTRIBFT.LLL > nul || insmod /ATTRIBFT.LLL > nul || insmod (bd)/boot/grub/ATTRIBFT.LLL > nul || insmod (bd)/ATTRIBFT.LLL > nul || insmod (bd)/grub/ATTRIBFT.LLL > nul || insmod (bd)/g4dll/ATTRIBFT.LLL > nul || insmod %@root%/ATTRIBFT.LLL > nul || echo -e \x20Loosely Linked Library ATTRIBFT.LLL needed in (bd), (bd)/boot/grub, (bd)/grub, (bd)/g4dll or current or root directory" && goto :eov
errorcheck off
goto :%~1
goto :eov
::
:mkdir
if not "%~3"=="" && set "message=Abort: too many arguments, argument "%~3" is not valid" && set result= && goto :eov
setlocal && set *
set mode=dir
call :checkforbiddenchars "%~2" &; if %forbiden%==Y && endlocal && set "message=Abort: forbidden chars in "%~2"" && set result= && goto :eov
set device=%~d2 &; fat info %device% > nul || endlocal && set "message=Abort: target "%device%" is not a fat device" && set result= && goto :eov
if %device%==(md) && endlocal && set "message=Abort: device "%device%" is not valid" && set result= && goto :eov
set "path=%~p2" &; if "%path%"=="/" && set "sfnpath=/"
if not exist sfnpath && call Fn.11 "%path%" "/ " && set "message=Abort: no starting spaces allowed in directories in "%path%"" && endlocal && set result= && goto :eov
set "name=%~n2" &; if not exist name && set "message=Abort: file name is missing" && endlocal && set result= && goto :eov
if "%name:~-1,1%"=="\" && set "name=%name:~0,-1%"
set "ext=%~x2" &; if "%ext:~-1,1%"=="\" && set "ext=%ext:~0,-1%"
if "%ext%"=="." && set ext=
echo -e "%name%" | set name= &;  set "name=%name:~1,-1%"
if exist ext && echo -e "%ext%" | set ext= &; set "ext=%ext:~1,-1%"
:mkdirnospacedotloop
## Starting spaces in name not allowed
if exist ext && call Fn.11 "%ext:~-1,1%" " " && set "ext=%ext:~0,-1%" && goto :mkdirnospacedotloop
if not exist ext && call Fn.11 "%name:~-1,1%" " " && set "name=%name:~0,-1%" && goto :mkdirnospacedotloop
if not exist ext && call Fn.11 "%name:~-1,1%" "." && set "name=%name:~0,-1%" && goto :mkdirnospacedotloop
call Fn.11 "%name:~0,1%" " " && set "name=%name:~1%" && goto :mkdirnospacedotloop
if "%ext%"=="." && set ext=
call :checkvalidname &; if %forbiden%==Y && endlocal && set "message=Abort: "%name%%%ext%" is not a valid filename" && set result= && goto :eov
if not exist sfnpath && call :checksfnpath "%path%" &; if not %SFNPATH%==N && set /u sfnpath=%path% ! set SFNPATH=
if not exist sfnpath && echo -e "%path%" | set path= &; set "path=%path:~1,-1%"
if not exist sfnpath && ATTRIBFT.LLL getsfnpath input="%output%" "%device%%%path%" &; if exist result && set sfnpath=%result% && set result= ! endlocal && set "message=Abort: no Short File Name(s) path found" && set result= && goto :eov
call :checksfn "%name%%%ext%" &; if not %SFN%==N && set sfnfile=%name%%%ext%
if not exist sfnfile && ATTRIBFT.LLL getsfn "%device%%%sfnpath%%%name%%%ext%" &; if exist result && endlocal && set result=1 && goto :eov ! if exist message && set message=
## Giving input="%output%" with function 'getsfnpath' = no result ???
if exist sfnfile && if exist %device%%%sfnpath%%%sfnfile% && set "message=Abort: "%device%%%path%%%name%%%ext%" is an existing file" && endlocal && set result= && goto :eov
#NEEDED?#if exist sfnfile && if exist %device%%%sfnpath%%%sfnfile% > nul && echo Abort: "%device%%%path%%%name%%%ext%" is an existing file && endlocal && set result=0 && goto :eov
if exist sfnfile && fat dir %device%%%sfnpath%%%sfnfile% > nul && endlocal && set result=1 && goto :eov
if not exist sfnfile && if %SFN%==N && call :makesfnfile "%device%%%sfnpath%%%name%%%ext%" "%mode%" &; if not exist sfnfile && endlocal && set "message=Abort: No Short Name File available for "%device%%%sfnpath%%%name%%%ext%"" && set result= && goto :eov
errorcheck off
if exist sfnfile &; fat mkdir %device%%%sfnpath%%%sfnfile% > nul && set result=1 ! set "message=Error: fat mkdir %device%%%sfnpath%%%sfnfile%" && set result=
if %CASE%==Y && set SFN=N
## Giving input="%output%" with function 'makelfn' = oke
if %SFN%==N && if %result%==1 && set result= && ATTRIBFT.LLL makelfn input="%output%" "%device%%%sfnpath%%%name%%%ext%" "%sfnfile%"
if exist result && set result=1
endlocal && set result=%result% && set "message=%message%"
goto :eov
::
:mkfile
if not "%~5"=="" && set "message=Abort: too many arguments, argument "%~5" is not valid" && set result= && goto :eov
setlocal && set *
set mode=file
if /i "%~2"=="size" && set "size=%~3" ! endlocal && set "message=Abort: argument 'size=N' is missing" && set result= && goto :eov
checkrange 0:0xFFFFFFFF calc %size% || endlocal && set "message=Abort: argument 'size=%size%' is not valid" && set result= && goto :eov
call :checkforbiddenchars "%~4" &; if %forbiden%==Y && endlocal && set "message=Abort: forbidden chars in "%~4"" && set result= && goto :eov
set device=%~d4 &; fat info %device% > nul || endlocal && set "message=Abort: target "%device%" is not a fat device" && set result= && goto :eov
if %device%==(md) && endlocal && set "message=Abort: device "%device%" is not valid" && set result= && goto :eov
set "path=%~p4" &; if "%path%"=="/" && set "sfnpath=/"
if not exist sfnpath && call Fn.11 "%path%" "/ " && endlocal && set "message=Abort: no starting spaces allowed in directories in "%path%"" && set result= && goto :eov
set "name=%~n4" &; if not exist name && endlocal && set "message=Abort: name-part in "%~4" must exist" && set result= && goto :eov
if "%name:~-1,1%"=="\" && set "name=%name:~0,-1%"
set "ext=%~x4" &; if "%ext%"=="." && set ext=
if "%ext:~-1,1%"=="\" && set "ext=%ext:~0,-1%"
if "%ext%"=="." && set ext=
echo -e "%name%" | set name= &;  set "name=%name:~1,-1%"
if exist ext && echo -e "%ext%" | set ext= &; set "ext=%ext:~1,-1%"
:mkfilenospacedotloop
if exist ext && call Fn.11 "%ext:~-1,1%" " " && set "ext=%ext:~0,-1%" && goto :mkfilenospacedotloop
if not exist ext && call Fn.11 "%name:~-1,1%" " " && set "name=%name:~0,-1%" && goto :mkfilenospacedotloop
if not exist ext && call Fn.11 "%name:~-1,1%" "." && set "name=%name:~0,-1%" && goto :mkfilenospacedotloop
call Fn.11 "%name:~0,1%" " " && set "name=%name:~1%" && goto :mkfilenospacedotloop
if "%ext%"=="." && set ext=
call :checkvalidname &; if %forbiden%==Y && endlocal && set "message=Abort: "%name%%%ext%" is not a valid filename" && set result= && goto :eov
if not exist sfnpath && call :checksfnpath "%path%" &; if not %SFNPATH%==N && set /u sfnpath=%path% ! set SFNPATH=
if not exist sfnpath && echo -e "%path%" | set path= &; set "path=%path:~1,-1%"
if not exist sfnpath && ATTRIBFT.LLL getsfnpath input="%output%" "%device%%%path%" &; if exist result && set sfnpath=%result% && set result= ! endlocal && set "message=Abort: no Short File Name(s) path found" && set result= && goto :eov
call :checksfn "%name%%%ext%" &; if not %SFN%==N && set sfnfile=%name%%%ext%
if not exist sfnfile && ATTRIBFT.LLL getsfn "%device%%%sfnpath%%%name%%%ext%" &; if exist result && endlocal && set "message=Abort: "%device%%%path%%%name%%%ext%" exist" && set result= && goto :eov ! if exist message && set message=
if exist sfnfile && if exist %device%%%sfnpath%%%sfnfile% && endlocal && set "message=Abort: "%sfnfile%" is an existing file && set result= && goto :eov
if exist sfnfile && fat dir %device%%%sfnpath%%%sfnfile% > nul && endlocal && set "message=Abort: "%sfnfile%" is an existing directory" && set result= && goto :eov
if not exist sfnfile && if %SFN%==N && call :makesfnfile "%device%%%sfnpath%%%name%%%ext%" "%mode%" &; if not exist sfnfile && endlocal && set "message=Abort: can not make Short File Name" && set result= && goto :eov
errorcheck off
if exist sfnfile &; fat mkfile size=%size% %device%%%sfnpath%%%sfnfile% > nul && set result=1 ! set "message=Error: fat mkfile size=%size% %device%%%sfnpath%%%sfnfile%" && set result=
if %CASE%==Y && set SFN=N
if %SFN%==N && if %result%==1 && set result= && ATTRIBFT.LLL makelfn input="%output%" "%device%%%sfnpath%%%name%%%ext%" "%sfnfile%"
if exist result && set result=1 ! set result=0
endlocal && set result=%result% && set "message=%message%"
goto :eov
::
:checkforbiddenchars
setlocal && set *
set forbiden=Y &; call Fn.11 "%~1" "\x22" || set forbiden=
#TEST# call Fn.11 has 'if'-properties with 'call Fn.11 "%var%" "chars" && cmdA #! cmdB'
if not %forbiden%==Y && set forbiden=Y &; call Fn.11 "%~1" "%" || set forbiden=
if not %forbiden%==Y && call Fn.11 "%~1" "\x01" && set forbiden=Y
if not %forbiden%==Y && set forbiden=Y &; call Fn.11 "%~1" "$[0x" || call Fn.11 "%~1" "]" || set forbiden=
if not %forbiden%==Y && set forbiden=Y &; call Fn.11 "%~1" "|" || set forbiden=
if not %forbiden%==Y && set forbiden=Y &; call Fn.11 "%~1" ">" || set forbiden=
if not %forbiden%==Y && set forbiden=Y &; call Fn.11 "%~1" "\a" || set forbiden=
if not %forbiden%==Y && set forbiden=Y &; call Fn.11 "%~1" "\b" || set forbiden=
if not %forbiden%==Y && set forbiden=Y &; call Fn.11 "%~1" "\f" || set forbiden=
if not %forbiden%==Y && set forbiden=Y &; call Fn.11 "%~1" "\n" || set forbiden=
if not %forbiden%==Y && set forbiden=Y &; call Fn.11 "%~1" "\r" || set forbiden=
if not %forbiden%==Y && set forbiden=Y &; call Fn.11 "%~1" "\t" || set forbiden=
if not %forbiden%==Y && set forbiden=Y &; call Fn.11 "%~1" "\v" || set forbiden=
#NOTPOSSIBLE# call Fn.11 "%~1" "\x" or call Fn.11 "%~1" "\ "
if not %forbiden%==Y && set forbiden=Y &; call Fn.11 "%~1" "\\" || set forbiden=
if %forbiden%==Y && endlocal && set forbiden=%forbiden% && goto :eof
call Fn.11 "%~1" "*" && endlocal && set forbiden=Y && goto :eof
call Fn.11 "%~1" ":" && endlocal && set forbiden=Y && goto :eof
call Fn.11 "%~1" "<" && endlocal && set forbiden=Y && goto :eof
call Fn.11 "%~1" "?" && endlocal && set forbiden=Y && goto :eof
#BADTOO#call Fn.11 "%~1" " " || call Fn.11 "%~1" "\x5C" && endlocal && set forbiden=Y && goto :eof
## Removes'\'-sameas'\ '#echo -e $[0x07]%~1 | set arg=
#TODO??#if /i %mode%==makelfn && set forbiden=Y && set /u "arg=%~1" &; call Fn.11 "%arg%" "CON" || call Fn.11 "%arg%" "" || call Fn.11 "%arg%" "" || call Fn.11 "%arg%" "" || call Fn.11 "%arg%" "" || call Fn.11 "%arg%" "" || call Fn.11 "%arg%" "" || call Fn.11 "%arg%" "" || call Fn.11 "%arg%" "" || call Fn.11 "%arg%" "" || call Fn.11 "%arg%" "" || call Fn.11 "%arg%" "" || call Fn.11 "%arg%" "" || call Fn.11 "%arg%" "" || call Fn.11 "%arg%" "" || call Fn.11 "%arg%" "" || set forbiden=
endlocal && set forbiden=%forbiden%
goto :eof
::
:checkvalidname
setlocal
if not "%~1"=="" && set "name=%~n1" && set "ext=%~x1" && if not "%~2"=="" && set "sfnname=%~n2" && set "sfnext=%~x2"
if not exist name && endlocal && goto :eof
set "name=%name%" &; set /a namelen=%@retval% ;; set "sfnname=%sfnname%" &; set /a sfnlen=%@retval%
if not %namelen%<=4 && endlocal && set forbiden= && goto :eof
if exist sfnlen && if not %sfnlen%<=4 && endlocal && set forbiden= && goto :eof
if /i "%name%"=="CON" && set forbiden=Y ! if /i "%name%"=="PRN" && set forbiden=Y ! if /i "%name%"=="AUX" && set forbiden=Y ! if /i "%name%"=="NUL" && set forbiden=Y ! if /i "%name%"=="COM1" && set forbiden=Y ! if /i "%name%"=="COM2" && set forbiden=Y ! if /i "%name%"=="COM3" && set forbiden=Y ! if /i "%name%"=="COM4" && set forbiden=Y ! if /i "%name%"=="COM5" && set forbiden=Y ! if /i "%name%"=="COM6" && set forbiden=Y ! if /i "%name%"=="COM7" && set forbiden=Y
if not %forbiden%==Y &; if /i "%name%"=="COM8" && set forbiden=Y ! if /i "%name%"=="COM9" && set forbiden=Y ! if /i "%name%"=="LPT1" && set forbiden=Y ! if /i "%name%"=="LPT2" && set forbiden=Y ! if /i "%name%"=="LPT3" && set forbiden=Y ! if /i "%name%"=="LPT4" && set forbiden=Y ! if /i "%name%"=="LPT5" && set forbiden=Y ! if /i "%name%"=="LPT6" && set forbiden=Y ! if /i "%name%"=="LPT7" && set forbiden=Y ! if /i "%name%"=="LPT8" && set forbiden=Y ! if /i "%name%"=="LPT9" && set forbiden=Y
if not %forbiden%==Y &; if "%name:~0,1%"=="." && set forbiden=Y ! if /i "%name:~-1,1%"=="." && set forbiden=Y ! if "%ext:~-1,1%"=="." && set forbiden=Y
if not %forbiden%==Y && if exist sfnname &; if /i %sfname%==CON && set forbiden=Y ! if /i %sfnname%==PRN && set forbiden=Y ! if /i %sfnname%==AUX && set forbiden=Y ! if /i %sfnname%==NUL && set forbiden=Y ! if /i %sfnname%==COM1 && set forbiden=Y ! if /i %sfnname%==COM2 && set forbiden=Y ! if /i %sfnname%==COM3 && set forbiden=Y ! if /i %sfnname%==COM4 && set forbiden=Y ! if /i %sfnname%==COM5 && set forbiden=Y ! if /i %sfnname%==COM6 && set forbiden=Y ! if /i %sfnname%==COM7 && set forbiden=Y ! if /i %sfnname%==COM8 && set forbiden=Y ! if /i %sfnname%==COM9 && set forbiden=Y ! if /i %sfnname%==LPT1 && set forbiden=Y ! if /i %sfnname%==LPT2 && set forbiden=Y ! if /i %sfnname%==LPT3 && set forbiden=Y ! if /i %sfnname%==LPT4 && set forbiden=Y ! if /i %sfnname%==LPT5 && set forbiden=Y ! if /i %sfnname%==LPT6 && set forbiden=Y ! if /i %sfnname%==LPT7 && set forbiden=Y ! if /i %sfnname%==LPT8 && set forbiden=Y ! if /i %sfnname%==LPT9 && set forbiden=Y
if not %forbiden%==Y && if exist sfnname &; if %sfnname:~0,1%==. && set forbiden=Y ! if %sfnext:~-1,1%==. && set forbiden=Y
endlocal && set forbiden=%forbiden%
goto :eof
::
:ren
if not "%~4"=="" && set "message=Abort: too many arguments, argument "%~4" is not valid" && set result= && goto :eov
setlocal && set *
set "ARG3=%~3" &; if %ARG3:~0,1%==( && if not "%~d2"=="%~d3" && endlocal && set "message=Abort: target device is not equal to source device" && set result= && goto :eov ! set ARG3=
call :checkforbiddenchars "%~2" &; if %forbiden%==Y && endlocal && set "message=Abort: forbidden chars in "%~2"" && set result= && goto :eov
call :checkforbiddenchars "%~3" &; if %forbiden%==Y && endlocal && set "message=Abort: forbidden chars in "%~3"" && set result= && goto :eov
set device=%~d2 &; fat info %device% > nul || endlocal && set "message=Abort: target "%device%" is not a fat device" && set result= && goto :eov
if %device%==(md) && endlocal && set "message=Abort: device "%device%" is not valid" && set result= && goto :eov
set "path1=%~p2" &; if "%path1%"=="/" && set "sfnpath1=/"
if not exist sfnpath1 && call Fn.11 "%path1%" "/ " && endlocal && set "message=Abort: no starting spaces allowed in directories in source path "%path1%"" && set result= && goto :eov
set "name1=%~n2" &; if not exist name1 && endlocal && set "message=Abort: source in "%~2" is invalid" && set result= && goto :eov
if "%name1:~-1,1%"=="\" && set "name1=%name1:~0,-1%"
set "ext1=%~x2" &; if "%ext1%"=="." && set ext1=
if "%ext1:~-1,1%"=="\" && set "ext1=%ext1:~0,-1%"
if "%ext1%"=="." && set ext1=
set "path2=%~p3" &; if "%path2%"=="/" && set "sfnpath2=/"
if not exist sfnpath2 && call Fn.11 "%path2%" "/ " && endlocal && set "message=Abort: no starting spaces allowed in directories in target path "%path2%" && set result= && goto :eov
set "name2=%~n3" &; if not exist name2 && endlocal && set "message=Abort: target missing && set result= && goto :eov
if "%name2:~-1,1%"=="\" && set "name2=%name2:~0,-1%"
set "ext2=%~x3" &; if "%ext2%"=="." && set ext2=
if "%ext2:~-1,1%"=="\" && set "ext2=%ext2:~0,-1%"
if "%ext2%"=="." && set ext2=
echo -e "%name1%" | set name1= &; set "name1=%name1:~1,-1%"
if exist ext && echo -e "%ext%" | set ext= &; set "ext=%ext:~1,-1%"
echo -e "%name2%" | set name2= &;  set "name2=%name2:~1,-1%"
if exist ext && echo -e "%ext%" | set ext= &; set "ext=%ext:~1,-1%"
:rennospacedotloop
## Starting spaces in name not allowed in Target
if exist ext1 && call Fn.11 "%ext1:~-1,1%" " " && set "ext1=%ext1:~0,-1%" && goto :rennospacedotloop
if not exist ext1 && call Fn.11 "%name1:~-1,1%" " " && set "name1=%name1:~0,-1%" && goto :rennospacedotloop
if not exist ext1 && call Fn.11 "%name1:~-1,1%" "." && set "name1=%name1:~0,-1%" && goto :rennospacedotloop
if "%ext1%"=="." && set ext1=
if exist ext2 && call Fn.11 "%ext2:~-1,1%" " " && set "ext2=%ext2:~0,-1%" && goto :rennospacedotloop
if not exist ext2 && call Fn.11 "%name2:~-1,1%" " " && set "name2=%name2:~0,-1%" && goto :rennospacedotloop
if not exist ext2 && call Fn.11 "%name2:~-1,1%" "." && set "name2=%name2:~0,-1%" && goto :rennospacedotloop
call Fn.11 "%name2:~0,1%" " " && set "name2=%name2:~1%" && goto :rennospacedotloop
if "%ext2%"=="." && set ext2=
call :checkvalidname "%name1%%%ext1%" &; if %forbiden%==Y && endlocal && set "message=Abort: "%name1%%%ext1%" is not a valid filename" && set result= && goto :eov
call :checkvalidname "%name2%%%ext2%" &; if %forbiden%==Y && endlocal && set "message=Abort: "%name2%%%ext2%" is not a valid filename" && set result= && goto :eov
if not exist sfnpath1 && call :checksfnpath "%path1%" &; if not %SFNPATH%==N && set /u sfnpath1=%path1% ! set SFNPATH=
if not exist sfnpath1 && echo -e "%path1%" | set path1= &; set "path1=%path1:~1,-1%"
if not exist sfnpath1 && ATTRIBFT.LLL getsfnpath input="%output%" "%device%%%path1%" &; if exist result && set sfnpath1=%result% && set result= ! endlocal && set "message=SFNpath1 not found for "%path1%"" && set result= && goto :eov
if not exist sfnpath2 && call :checksfnpath "%path2%" &; if not %SFNPATH%==N && set /u sfnpath2=%path2% ! set SFNPATH=
if not exist sfnpath2 && echo -e "%path2%" | set path2= &; set "path2=%path2:~1,-1%"
call :checksfn "%name1%%%ext1%" &; if not %SFN%==N && set /u sfnfile1=%name1%%%ext1% && set CASE= ! set SFN1=N && set LFN1=Y && set SFN= && set CASE= && set "lfnfile1=%name1%%%ext1%"
call :checksfn "%name2%%%ext2%" &; if not %SFN%==N && set /u sfnfile2=%name2%%%ext2% && set CASE2=%CASE% && set CASE= ! set "lfnfile2=%name2%%%ext2%" && set LFN2=Y && set SFN2=N && set SFN= && set CASE=
## Call :move if not PATH1=PATH2
if not /i "%path1%"=="%path2%" && call :move &; if exist result && set result=1 ! set result= &; endlocal && set result=%result% && set "message=%message%" && goto :eov
## Try if sfnfile1 is SFN of LFN of name1ext1
if not exist sfnfile1 && ATTRIBFT.LLL getsfn input="%output%" "%device%%%sfnpath1%%%name1%%%ext1%" &; if exist result && set /u sfnfile1=%result% && set result= && set LFN1=Y ! endlocal && set "message=Abort: Long File Name "%name1%%%ext1%" not exist on source" && set result= && goto :eov
## FIRST: check existence of source folder/ file and set 'mode' to file or dir
if exist %device%%%sfnpath1%%%sfnfile1% && set file1=1 && set mode=file
if not exist file1 && fat dir %device%%%sfnpath1%%%sfnfile1% > nul && set dir1=1 && set mode=dir
if not exist file1 && if not exist dir1 && endlocal && set "message=Abort: "%name1%%%ext1%" not exist on source" && set result= && goto :eov
## Try if sfnfile1 has a LFN and check if name2ext2 is not equal
setlocal && ATTRIBFT.LLL getlfn input="%output%" "%device%%%sfnpath1%%%sfnfile1%" &; endlocal && set "result=%result%" &; if exist result && set "lfnfile1=%result%" && set result= && if not %CASE1%==Y && set LFN1=Y
if exist lfnfile1 && if "%lfnfile1%"=="%name2%%%ext2%" && endlocal && set "message=Abort: can not rename Long File Name "%lfnfile1%" to "%name2%%%ext2%"" && set result= && goto :eov
## Check if not SFN1=SFN2 on command-line
if exist lfnfile1 && if %sfnfile1%==%sfnfile2% && if "%sfnfile1%"=="%name1%%%ext1%" && if "%sfnfile2%"=="%name2%%%ext2%" && endlocal && set "message=Abort: can not rename Short File Name to itself" && set result= && goto :eov
## IS THIS check NEEDED???
if exist lfnfile1 && if not "%sfnfile1%"=="%name1%%%ext1%" && if exist sfnfile2 && if not %LFN2%==Y && if not %sfnfile1%==%sfnfile2% && if exist %device%%%sfnpath1%%%sfnfile2% && endlocal && set "message=Abort: file "%name2%%%ext2%" exists already" && set result= && goto :eov
if exist lfnfile1 && if not "%sfnfile1%"=="%name1%%%ext1%" && if exist sfnfile2 && if not %LFN2%==Y && if not %sfnfile1%==%sfnfile2% && fat dir %device%%%sfnpath1%%%sfnfile2% > nul && endlocal && set "message=Abort: directory "%name2%%%ext2%" exists already" && set result= && goto :eov
## Delete lfnfile1 to make case-LFN2
if exist lfnfile1 && if %sfnfile1%==%sfnfile2% && if %CASE2%==Y && ATTRIBFT.LLL dellfn input="%output%" "%device%%%sfnpath1%%%lfnfile1%" &; if not exist result && endlocal && set "message=Abort: can not delete Long File Name "%name1%%%ext1%" on source" && set result= && goto :eov ! if %sfnfile1%==%sfnfile2% && set result= ! set result= && set DELLFN1=Y
## 3 times (???) Make case-LFN2 if sfnfile1=sfnfile2 regardless of LFN-status of source and exit
if /i "%lfnfile1%"=="%sfnfile1%" && if %sfnfile1%==%sfnfile2% && if %CASE2%==Y && ATTRIBFT.LLL makelfn input="%output%" "%device%%%sfnpath1%%%name2%%%ext2%" "%sfnfile1%" &; if exist result && endlocal && set result=1 && goto :eov ! endlocal && set "message=Abort: Long File Name "%name2%%%ext2%" on target for "%sfnfile1%" not created" && set result= && goto :eov
if not %LFN1%==Y && if %sfnfile1%==%sfnfile2% && if %CASE2%==Y && ATTRIBFT.LLL makelfn input="%output%" "%device%%%sfnpath1%%%name2%%%ext2%" "%sfnfile1%" &; if exist result && endlocal && set result=1 && goto :eov ! endlocal && set "message=Abort: Long File Name "%name2%%%ext2%" on target for "%sfnfile1%" not created" && set result= && goto :eov
if %LFN1%==Y && if %sfnfile1%==%sfnfile2% && if not %LFN2%==Y && if %CASE2%==Y && ATTRIBFT.LLL makelfn input="%output%" "%device%%%sfnpath1%%%name2%%%ext2%" "%sfnfile1%" &; if exist result && endlocal && set result=1 && goto :eov ! endlocal && set "message=Abort: Long File Name "%name2%%%ext2%" on target for "%sfnfile1%" not created" && set result= && goto :eov
## Always delete lfnfile1 unless sfnfile1==name1ext1
if exist lfnfile1 && if not "%sfnfile1%"=="%name1%%%ext1%" && ATTRIBFT.LLL dellfn input="%output%" "%device%%%sfnpath1%%%lfnfile1%" &; if not exist result && endlocal && set "message=Abort: can not delete Long File Name "%name1%%%ext1%" on source" && set result= && goto :eov ! if %sfnfile1%==%sfnfile2% && if not %CASE2%==Y && endlocal && set result=1 && goto :eov ! set result= && set DELLFN1=Y
## Change case in further identical LFN's and exit
if %LFN1%==Y && if %LFN2%==Y && if /i "%name1%%%ext1%"=="%name2%%%ext2%" && ATTRIBFT.LLL makelfn input="%output%" "%device%%%sfnpath1%%%name2%%%ext2%" "%sfnfile1%" &; if exist result && endlocal && set result=1 && goto :eov ! endlocal && set "message=Abort: Long File Name "%name2%%%ext2%" on target for "%sfnfile1%" not created" && set result= && goto :eov
## Check existence file/ dir if no LFN2 is on command-line
if exist sfnfile2 && if not %LFN2%==Y && if exist %device%%%sfnpath1%%%sfnfile2% && endlocal && set "message=Abort: file "%name2%%%ext2%" exists already" && set result= && goto :eov
if exist sfnfile2 && if not %LFN2%==Y && fat dir %device%%%sfnpath1%%%sfnfile2% > nul && endlocal && set "message=Abort: directory "%name2%%%ext2%" exists already" && set result= && goto :eov
## Check if LFN2 is on command-line exists already
if %LFN2%==Y && if not /i "%name1%%%ext1%"=="%name2%%%ext2%" && ATTRIBFT.LLL getsfn input="%output%" "%device%%%sfnpath1%%%name2%%%ext2%" &; if exist result && endlocal && set "message=Abort: Long File Name "%name2%%%ext2%" exists already on target && set result= && goto :eov ! set message=
## makesfn for full LFN2 if sfnfile1 is on command-line but LFN1 exists (rename LFN1 to LFN2 other than case difference)
if exist sfnfile2 && if %LFN1%==Y && if "%sfnfile1%"=="%name1%%%ext1%" && if not "%sfnfile1%"=="%name2%%%ext2%" && if not %CASE2%==Y && call :makesfnfile "%lfnfile1%" "name" "%sfnfile2%" &; if not exist sfnfile && endlocal && set "message=Abort: %sfnfile2% is not valid with Long File Name "%lfnfile1%" of %sfnfile1%" && set result= && goto :eov
## Delete LFN1 to make new full LFN2
if exist sfnfile2 && if %LFN2%==Y && if not "%sfnfile1%"=="%name2%%%ext2%" && if not %CASE2%==Y && ATTRIBFT.LLL dellfn input="%output%" "%device%%%sfnpath1%%%lfnfile1%" &; if not exist result && endlocal && set "message=Abort: can not delete Long File Name "%lfnfile1%" on source" && set result= && goto :eov ! if exist message && set message=
## Make full LFN2 if sfnfile1=sfnfile2 and exit
if %LFN1%==Y && if %LFN2%==Y && if %sfnfile1%==%sfnfile2% && ATTRIBFT.LLL makelfn input="%output%" "%device%%%sfnpath1%%%name2%%%ext2%" "%sfnfile1%" &; if exist result && endlocal && set result=1 && goto :eov ! endlocal && set "message=Abort: Long File Name "%name2%%%ext2%" on target for "%sfnfile1%" not created" && set result= && goto :eov
## Delete lfnfile1 'if /i sfnfile1=sfnfile2' AND if not earlier gone wrong [if not DELLFN1=Y]
if exist lfnfile1 && if not %DELLFN1%==Y && if /i %sfnfile1%==%sfnfile2% && ATTRIBFT.LLL dellfn input="%output%" "%device%%%sfnpath1%%%lfnfile1%" &; if not exist result && endlocal && set "message=Abort: can not delete Long File Name "%lfnfile1%" on source" && set result= && goto :eov
## makesfn for full LFN2 'if not /i %sfnfile1=sfnfile2' (get SFN-target for 'fat ren')
if %LFN2%==Y && if not /i %sfnfile1%==%sfnfile2% && set sfnfile= && call :makesfnfile "%device%%%sfnpath1%%%name2%%%ext2%" "%mode%" "%sfnfile2%" &; if exist sfnfile && set /u sfnfile2=%sfnfile% ! endlocal && set "message=Abort: BAD conversion of Long File Name on target to Short File Name on source" && set result= && goto :eov
## 'fat ren' => all LFN's must be deleted first because new SFN-entry is created with 'fat ren'
errorcheck off
if exist sfnfile2 && if not /i %sfnfile2%==%sfnfile1% &; fat ren %device%%%sfnpath1%%%sfnfile1% %sfnpath1%%%sfnfile2% > nul && set success=Y ! endlocal && set "message=Error: fat ren %device%%%sfnpath1%%%sfnfile1% %sfnpath1%%%sfnfile2%" && set result= && goto :eov
if exist sfnfile2 && if not /i %sfnfile2%==%sfnfile1% && if %success%==Y && set result=1 && if %LFN2%==Y && if not "%name2%%%ext2%"=="%sfnfile2%" && set result= &; ATTRIBFT.LLL makelfn input="%output%" "%device%%%sfnpath1%%%name2%%%ext2%" "%sfnfile2%" &; if not exist result && endlocal && set "message=Failed to make Long File Name "%lfnfile2%" on target for "%sfnfile2%"" && set result= && goto :eov
if %LFN1%==Y && if not %SFN1%==N && if not %LFN2%==Y && if not %SFN2%==N && if not /i %sfnfile1%==%sfnfile2% && if exist lfnfile1 && ATTRIBFT.LLL makelfn input="%output%" "%device%%%sfnpath1%%%lfnfile1%" "%sfnfile2%" &; if exist result && endlocal && set result=1 && goto :eov ! endlocal && set "message=Abort: Long File Name "%lfnfile1%" for "%sfnfile1%" not created on target" && set result= && goto :eov
if exist sfnfile2 && if not /i %sfnfile2%==%sfnfile1% && if %success%==Y && set result=1 && if not %LFN2%==Y && if %CASE2%==Y && set result= &; ATTRIBFT.LLL makelfn input="%output%" "%device%%%sfnpath1%%%name2%%%ext2%" "%sfnfile2%" &; if not exist result && endlocal && set "message=Failed to make Long File Name "%lfnfile1%" on target for "%sfnfile2%"" && set result= && goto :eov
if %CASE2%==Y && set LFN2=Y
if exist sfnfile2 && if /i %sfnfile2%==%sfnfile1% && set result=0 && if %LFN2%==Y && if not "%name2%%%ext2%"=="%sfnfile2%" && set result= &; ATTRIBFT.LLL makelfn input="%output%" "%device%%%sfnpath1%%%name2%%%ext2%" "%sfnfile2%" &; if not exist result && set "message=Failed to make Long File Name "%lfnfile2%" on target for "%sfnfile2%""
if exist result && set result=1
endlocal && set result=%result% && set "message==%message%"
goto :eov
::
:move
setlocal
## Get sfnfile1 if name1ext1 is LFN
if not exist sfnfile1 && ATTRIBFT.LLL getsfn input="%output%" "%device%%%sfnpath1%%%name1%%%ext1%" &; if exist result && set /u sfnfile1=%result% && set result= && set LFN1=Y ! endlocal && set "message=Abort: Long File Name "%name1%%%ext1%" not exist on source" && set result= && goto :eof
## FIRST: check existence of source folder/ file and set 'mode' to file or dir
if exist %device%%%sfnpath1%%%sfnfile1% && set file1=1 && set mode=file
if not exist file1 && fat dir %device%%%sfnpath1%%%sfnfile1% > nul && set dir1=1 && set mode=dir
if exist dir1 && set "check1=%sfnpath1%%%sfnfile1%" &; set /a checklen=%@retval% &; call if /i "%check1%"=="%^sfnpath2:~0,%checklen%%%" && endlocal && set "message=Abort: can not rename part of target-path" && set result= && goto :eof
if not exist file1 && if not exist dir1 && endlocal && set "message=Abort: "%name1%%%ext1%" not exist on source" && set result= && goto :eof
## Try if sfnfile1 has a LFN
setlocal && ATTRIBFT.LLL getlfn input="%output%" "%device%%%sfnpath1%%%sfnfile1%" &; endlocal && set "result=%result%" &; if exist result && set "lfnfile1=%result%" && set result=
## Get sfnpath2 if exists
ATTRIBFT.LLL getsfnpath input="%output%" "%device%%%path2%" &; if exist result && set sfnpath2=%result% && set result= ! endlocal && set "message=Abort: SFNPATH2 of "%path2%" not found" && set result= && goto :eof
## Check if sfnfile2 exists
if not exist sfnfile2 && if exist lfnfile2 && ATTRIBFT.LLL getsfn input="%output%" "%device%%%sfnpath2%%%lfnfile2%" &; if exist result && endlocal && set "message=Abort; LFN2 "%lfnfile2%" exists already in "%path2%"" && set result= && goto :eof ! set message=
## makesfn for full LFN2 if LFN1 not exist and sfnfile2 not exist
if not %LFN1%==Y && if %LFN2%==Y && if not exist sfnfile2 && call :makesfnfile "%name2%%%ext2%" "name" "%sfnfile1%" &; if %sfnfile1%==%sfnfile% && set "sfnfile2=%sfnfile%" ! set sfnfile2= && set sfnfile=
## Check existence sfnfile2 as file/ dir on target
if not %LFN1%==Y && if exist sfnfile2 && if exist %device%%%sfnpath2%%%sfnfile2% && set file2=1 && if not %LFN2%==Y && endlocal && set "message=SFN2 %sfnfile2% is an existing file" && set result= && goto :eof
if not %LFN1%==Y && if exist sfnfile2 && fat dir %device%%%sfnpath2%%%sfnfile2% > nul && set dir2=1 && if not %LFN2%==Y && endlocal && set "message=SFN2 %sfnfile2% is an existing directory" && set result= && goto :eof
if /i %lfnfile1%==%sfnfile1% &; if not exist file2 if not exist dir2 |; endlocal && set "message=Abort: "%lfnfile1%" exists in "%path2%"" && set result= && goto :eof
## Prepare to make LFN-file2 as lfnfile1
if exist lfnfile1 && set LFN1=Y
## Do 'fat ren' if not LFN involved and exit
errorcheck off
if not %CASE2%==Y && if not %LFN1%==Y && if not %LFN2%==Y && if not exist file2 && if not exist dir2 &; fat ren %device%%%sfnpath1%%%sfnfile1% %sfnpath2%%%sfnfile2% > nul && endlocal && set result=1 && goto :eof ! endlocal && set "message=Abort: can not move "%device%%%sfnpath1%%%sfnfile1%" to "%sfnpath2%%%sfnfile2%"" && set result= && goto :eof
## makesfn for full LFN2
if %LFN2%==Y &; if not exist file2 if not exist dir2 if exist sfnfile |; set sfnfile2= && set sfnfile= && call :makesfnfile "%device%%%sfnpath2%%%lfnfile2%" "%mode%" &; if exist sfnfile && set sfnfile2=%sfnfile% && set sfnfile= ! endlocal && set "message=Abort: can not get SFN2 for "%lfnfile2%"" && set result= && goto :eof
if not exist sfnfile2 && set sfnfile2=%sfnfile1%
if %CASE2%==Y && set "lfnfile2=%name2%%%ext2%"
## Delete lfnfile1 before moving => NOT later, if no delting possible, no moving [c.q. read-only device]
if exist lfnfile1 && ATTRIBFT.LLL dellfn input="%output%" "%device%%%sfnpath1%%%lfnfile1%" &; if not exist result && endlocal && set "message=Abort: can not delete LFN1 "%lfnfile1%"" && set result= && goto :eof
## 'fat ren' to move SFN1
errorcheck off
set result= &; fat ren %device%%%sfnpath1%%%sfnfile1% %sfnpath2%%%sfnfile2% > nul && set success=Y ! endlocal && set "message=Abort: can not move "%device%%%sfnpath1%%%sfnfile1%" to "%sfnpath2%%%sfnfile2%"" && set result= && goto :eof
## Make lfnfile2 on target SFN-file2 if exist lfnfile2
if %success%==Y && if exist lfnfile2 &; ATTRIBFT.LLL makelfn input="%output%" "%device%%%sfnpath2%%%lfnfile2%" "%sfnfile2%" &; if not exist result && endlocal && set "message=Abort: can not make LFN2 "%lfnfile2%" for "%sfnfile2%"" && set result= && goto :eof
## Make lfnfile2 on target SFN-file2 if NOT exist lfnfile2, BUT lfnfile1 exists AND sfnfile1=sfnfile2 [move including LFN]
if %success%==Y && if not exist lfnfile2 && if exist lfnfile1 && if %sfnfile1%==%sfnfile2% &; ATTRIBFT.LLL makelfn input="%output%" "%device%%%sfnpath2%%%lfnfile1%" "%sfnfile2%" &; if not exist result && endlocal && set "message=Abort: can not make LFN2 "%lfnfile1%" for "%sfnfile2%"" && set result= && goto :eof
if exist result && set result=1 ! set result=0
endlocal && set result=%result% && set "message=%message%"
goto :eof
::
:del
setlocal && set *
if /i "%~2"=="/r" && if not "%~3"=="" && set del=r && shift
if not "%~3"=="" && set "message=Abort: too many arguments, argument "%~3" is not valid" && set result= && goto :eov
call :checkforbiddenchars "%~2" &; if %forbiden%==Y && endlocal && set "message=Abort: forbidden chars in "%~2"" && set result= && goto :eov
set device=%~d2 &; fat info %device% > nul || endlocal && set "message=Abort: target "%device%" is not a fat device" && set result= && goto :eov
if %device%==(md) && endlocal && set "message=Abort: device "%device%" is not valid" && set reuslt= goto :eov
set "path=%~p2" &; if "%path%"=="/" && set "sfnpath=/"
## Starting spaces allowed in PATH!
set "name=%~n2" &; if not exist name && endlocal && set "message=Abort: name-part of filename must exist" && set result= && goto :eov
if "%name:~-1,1%"=="\" && set "name=%name:~0,-1%"
set "ext=%~x2" &; if "%ext%"=="." && set ext=
if "%ext:~-1,1%"=="\" && set "ext=%ext:~0,-1%"
if "%ext%"=="." && set ext=
echo -e "%name%" | set name= &; set "name=%name:~1,-1%"
if exist ext && echo -e "%ext%" | set ext= &; set "ext=%ext:~1,-1%"
:delnospacedotloop
## Starting spaces allowed in NAME!
if exist ext && call Fn.11 "%ext:~-1,1%" " " && set "ext=%ext:~0,-1%" && goto :delnospacedotloop
if not exist ext && call Fn.11 "%name:~-1,1%" " " && set "name=%name:~0,-1%" && goto :delnospacedotloop
if not exist ext && call Fn.11 "%name:~-1,1%" "." && set "name=%name:~0,-1%" && goto :delnospacedotloop
if "%ext%"=="." && set ext=
call :checkvalidname "%name1%%%ext1%" &; if %forbiden%==Y && endlocal && set "message=Abort: "%name%%%ext%" is not a valid filename" && set result= && goto :eov
if not exist sfnpath && call :checksfnpath "%path%" &; if not %SFNPATH%==N && set /u sfnpath=%path% ! set SFNPATH=
if not exist sfnpath && echo -e "%path%" | set path= &; set "path=%path:~1,-1%"
if not exist sfnpath && ATTRIBFT.LLL getsfnpath input="%output%" "%device%%%path%" &; if exist result && set sfnpath=%result% && set result= ! endlocal && set "message=Abort: no Short File Name(s) path found" && set result= && goto :eov
call :checksfn "%name%%%ext%" &; if not %SFN%==N && set sfnfile=%name%%%ext%
if not exist sfnfile && ATTRIBFT.LLL getsfn "%device%%%sfnpath%%%name%%%ext%" &; if exist result && set /u sfnfile=%result% && set result= ! endlocal && set "message=Abort: "%name%%%ext%" not found" && set result= && goto :eov
if exist sfnfile && if not %SFN%==N &; setlocal && ATTRIBFT.LLL getlfn input="%output%" "%device%%%sfnpath%%%sfnfile%" &; endlocal && set "result=%result%" &; if exist result && set "lfnfile=%result%" && set result= && set CASE=Y
fat dir %device%%%sfnpath%%%sfnfile% > nul && ls %device%%%sfnpath%%%sfnfile%/ > nul && endlocal && set "message=Abort: directory "%device%%%path%%%name%%%ext%" is not empty" && set result= && goto :eov
if %del%==r && ATTRIBFT.LLL isreadonly input="%output%" "%device%%%sfnpath%%%sfnfile%" &; if %result%==1 && set result= &; ATTRIBFT.LLL setattrib "%device%%%sfnpath%%%sfnfile%" "-r" &; if %result%==1 && set result= ! endlocal && set "message=Abort: failed to remove attribute 'read-only'" && set result= && goto :eov
errorcheck off
fat del %device%%%sfnpath%%%sfnfile% > nul && set success=Y ! set "message=Error: fat del %device%%%sfnpath%%%sfnfile%"
if %success%==Y && set result=1 && if %SFN%==N && set result= &; ATTRIBFT.LLL dellfn input="%output%" "%device%%%sfnpath%%%name%%%ext%"
if %success%==Y && if exist lfnfile && if %CASE%==Y && set result= &; ATTRIBFT.LLL dellfn input="%output%" "%device%%%sfnpath%%%lfnfile%"
if exist result && set result=1
endlocal && set result=%result% && set "message=%message%"
goto :eov
::
:copy
setlocal && set *
set "ARG2=%~2" &; if /i "%ARG2:~0,2%"=="/o" && if not "%~3"=="" && if not "%~4"=="" && set o=/o && shift && if "%ARG2:~2,2%"==":r" && set del=/r
set "ARG2=%~2" &; if /i "%ARG2%"=="/a" && if not "%~3"=="" && if not "%~4"=="" && set a=/a && shift
set "ARG2=%~2" &; if /i "%ARG2:~0,2%"=="/o" && if not "%~3"=="" && if not "%~4"=="" && set o=/o && shift && if "%ARG2:~2,2%"==":r" && set del=/r
if not "%~4"=="" && endlocal && set "message=Abort: too many arguments, argument "%~4" is not valid" && set result= && goto :eov
set ARG2=
call :checkforbiddenchars "%~2" &; if %forbiden%==Y && endlocal && set "message=Abort: forbidden chars in "%~2"" && set result= && goto :eov
call :checkforbiddenchars "%~3" &; if %forbiden%==Y && endlocal && set "message=Abort: forbidden chars in "%~3"" && set result= && goto :eov
set device1=%~d2 &; fat info %device1% > nul && set filesysS=fat
if %device1%==(md) && endlocal && set "message=Abort: device "%device%" is not valid" && set result= && goto :eov
set "path1=%~p2" &; if "%path1%"=="/" && set "sfnpath1=/"
if not exist sfnpath1 && call Fn.11 "%path1%" "/ " && endlocal && set "message=Abort: no starting spaces allowed in directories in source path "%path1%"" && set result= && goto :eov
set "name1=%~n2" &; if not exist name1 && endlocal && set "message=Abort: no filename given (source)" && set result= && goto :eov
if "%name1:~-1,1%"=="\" && set "name1=%name1:~0,-1%"
set "ext1=%~x2" &; if "%ext1%"=="." && set ext1=
if "%ext1:~-1,1%"=="\" && set "ext1=%ext1:~0,-1%"
if "%ext1%"=="." && set ext1=
set device2=%~d3 &; fat info %device2% > nul || endlocal && set "message=Abort: target "%device2%" is not a fat device" && set result= && goto :eov
if %device2%==(md) && endlocal && set "message=Abort: device "%device%" is not valid" && set result= && goto :eov
set "path2=%~p3" &; if "%path2%"=="/" && set "sfnpath2=/"
if not exist sfnpath2 && call Fn.11 "%path2%" "/ " && endlocal && set "message=Abort: no starting spaces allowed in directories in target "%path2%"" && set result= && goto :eov
set "name2=%~n3"
if "%name2:~-1,1%"=="\" && set "name2=%name2:~0,-1%"
set "ext2=%~x3" &; if "%ext2%"=="." && set ext2=
if "%ext2:~-1,1%"=="\" && set "ext2=%ext2:~0,-1%"
if "%ext2%"=="." && set ext2=
if not exist sfnpath1 && echo -e "%path1%" | set path1= &; set "path1=%path1:~1,-1%"
echo -e "%name1%" | set name1= &;  set "name1=%name1:~1,-1%"
if exist ext1 && echo -e "%ext1%" | set ext1= &; set "ext1=%ext1:~1,-1%"
if not exist sfnpath2 && echo -e "%path2%" | set path2= &; set "path2=%path2:~1,-1%"
echo -e "%name2%" | set name2= &;  set "name2=%name2:~1,-1%"
if exist ext2 && echo -e "%ext2%" | set ext2= &; set "ext2=%ext2:~1,-1%"
if /i "%~f2"=="%~f3" && set "message=Abort: can not copy file to itself" &; if not "%name1%%%ext1%"=="%name2%%%ext2%" && set "message=Abort: can not copy file to itself, to change filename use function <ren>" ! set "message=%message%" &; endlocal && set "message=%message%" && set result= && goto :eov
:copynospacedotloop
if exist ext1 && call Fn.11 "%ext1:~-1,1%" " " && set "ext1=%ext1:~0,-1%" && goto :copynospacedotloop
if not exist ext1 && call Fn.11 "%name1:~-1,1%" " " && set "name1=%name1:~0,-1%" && goto :copynospacedotloop
if not exist ext1 && call Fn.11 "%name1:~-1,1%" "." && set "name1=%name1:~0,-1%" && goto :copynospacedotloop
if "%ext1%"=="." && set ext1=
if exist ext2 && call Fn.11 "%ext2:~-1,1%" " " && set "ext2=%ext2:~0,-1%" && goto :copynospacedotloop
if not exist ext2 && call Fn.11 "%name2:~-1,1%" " " && set "name2=%name2:~0,-1%" && goto :copynospacedotloop
if not exist ext2 && call Fn.11 "%name2:~-1,1%" "." && set "name2=%name2:~0,-1%" && goto :copynospacedotloop
if "%ext2%"=="." && set ext2=
call :checkvalidname "%name1%%%ext1%" &; if %forbiden%==Y && endlocal && set "message=Abort: "%name1%%%ext1%" is not a valid filename" && set result= && goto :eov
call :checkvalidname "%name2%%%ext2%" &; if %forbiden%==Y && endlocal && set "message=Abort: "%name2%%%ext2%" is not a valid filename" && set result= && goto :eov
if not exist %device1%/"%path1:~1%%%name1%%%ext1%" && endlocal && set "message=Abort: "%device1%%%path1%%%name1%%%ext1%" does not exist" && set result= && goto :eov
if not exist o && if not exist name2 && call Fn.11 "%name1:~2%" "~" || if exist %device2%/"%path2:~1%%%name1%%%ext1%" && endlocal && set "message=Abort: "%device2%%%path2%%%name1%%%ext1%" exists already" && set result= && goto :eov
if not exist o && if exist name2 && call Fn.11 "%name2:~2%" "~" || if exist %device2%/"%path2:~1%%%name2%%%ext2%" && endlocal && set "message=Abort: "%device2%%%path2%%%name2%%%ext2%" exists already" && set result= && goto :eov
call :getcase "%device1%%%path1%%%name1%%%ext1%" &; if exist name && set "name1=%name%" && set "ext1=%ext%" && set name= && set ext= ! if %result%==0 && set /u sfnfile1=%name1%%%ext1% && set result=
if not exist sfnpath1 &; call :checksfnpath "%path1%" &; if not %SFNPATH%==N && set sfnpath1=%path1% && set SFNPATH= ! set SFNPATH1=N && set SFNPATH=
if /i %filesysS:~0,3%==fat && if not exist sfnpath1 &; ATTRIBFT.LLL getsfnpath input="%output%" "%device1%%%path1%" &; if exist result && set /u sfnpath1=%result% && set result= ! endlocal && set "message=Can not find sfnpath of "%device1%%%path1%"" && set result= && goto :eov
if not exist sfnfile1 && call :checksfn "%name1%%%ext1%" &; if %SFN%==N && set "lfnfile=%name1%%%ext1%" && set SFN1=N && set SFN= && set CASE= ! if %CASE%==Y && set /u sfnfile1=%name1%%%ext1% && set SFN= && set CASE1=Y && set CASE= ! set /u sfnfile1=%name1%%%ext1% && set SFN=
if /i %filesysS:~0,3%==fat && if not exist sfnfile1 && ATTRIBFT.LLL getsfn "%device1%%%sfnpath1%%%name1%%%ext1%" &; if exist result && set /u "sfnfile1=%result%" && set SFN1=N && set result= ! if exist message && set message=
if /i %filesysS:~0,3%==fat && if not %CASE1%==Y && if not exist name2 && set result= &; setlocal && ATTRIBFT.LLL getlfn input="%output%" "%device1%%%sfnpath1%%%sfnfile1%" &; endlocal && set "result=%result%" &; if exist result && set "lfnfile=%result%" && set result= && set SFN1=N
errorcheck off
if /i %filesysS:~0,3%==fat &; fat dir %device1%%%sfnpath1%%%sfnfile1% > nul && endlocal && set "message=Abort: "%device1%%%path1%%%name1%%%ext1%" is a directory" && set result= && goto :eov
if not /i %filesysS%==fat && if exist %device1%/"%path1:~1%%%name1%%%ext1%" && set file1=1
if not /i %filesysS:~0,3%==fat && if not %file1%==1 &; ls %device1%/"%path1:~1%%%name1%%%ext1%"/ > nul && endlocal && set "message=Abort: "%device1%%%path1%%%name1%%%ext1%" is a directory" && set result= && goto :eov
if not /i %filesysS:~0,3%==fat && if not %file1%==1 &; ls %device1%/"%path1:~1%%%name1%%%ext1%"/ > nul || endlocal && set "message=Abort: "%device1%%%path1%%%name1%%%ext1%" is an empty directory or a zero-byte file" && set result= && goto :eov
if /i %filesysS:~0,3%==fat && if exist %device1%/"%path1:~1%%%name1%%%ext1%" && set file1=1
if not %file1%==1 && endlocal && set "message=Abort: "%device1%%%path1%%%name1%%%ext1%" does not exist" && set result= && goto :eov
if not exist sfnpath2 && if /i "%path2%"=="%path1%" && set sfnpath2=%sfnpath1%
if not exist sfnpath2 &; call :checksfnpath "%path2%" &; if not %SFNPATH%==N && set sfnpath2=%path2% && set SFNPATH= ! set SFNPATH2=N && set SFNPATH=
if not exist sfnpath2 && ATTRIBFT.LLL getsfnpath "%device2%%%path2%" &; if exist result && set /u sfnpath2=%result% && set result= ! endlocal && set "message=Abort: Short Path Name(s) of "%device2%%%path2%" not found" && set result= && goto :eov
if not exist name2 && if exist sfnpath2 && if exist sfnfile1 && fat dir %device2%%%sfnpath2%%%sfnfile1% > nul && endlocal && set "message=Abort: "%device2%%%path2%%%name1%%%ext1%" is an existing directory" && set result= && goto :eov
if exist name2 && call :checksfn "%name2%%%ext2%" &; if %SFN%==N && set "lfnfile=%name2%%%ext2%" && set LFN2=Y && set SFN2=N && set SFN= && set CASE= ! if %CASE%==Y && set /u sfnfile2=%name2%%%ext2% && set SFN= && set CASE2=Y && set CASE= ! set /u sfnfile2=%name2%%%ext2% && set SFN=
if exist name2 && if not exist sfnfile2 && if %SFN2%==N && if %o%==/o &; ATTRIBFT.LLL getsfn "%device2%%%sfnpath2%%%name2%%%ext2%" &; if exist result && set /u sfnfile2=%result% && set result= ! if exist message && set message=
if not exist sfnfile2 && if exist %device2%%%sfnpath2%%%sfnfile1% && if not %o%==/o && if not %LFN2%==Y && endlocal && set result=1 && goto :eov
if exist sfnfile2 && if %SFN2%==N &; fat dir %device2%%%sfnpath2%%%sfnfile2% > nul &; if %LFN2%==Y && set sfnfile2= ! endlocal && set "message=Abort: "%name2%%%ext2%" is an existing directory on target" && set result= && goto :eov
if exist sfnfile2 && if %SFN2%==N &; if exist %device2%%%sfnpath2%%%sfnfile2% &; if %LFN2%==Y && if not %o%==/o && set sfnfile2= ! if not %o%==/o && endlocal && set result=1 && goto :eov
if exist name2 && if not exist sfnfile2 && if %SFN2%==N &; call :makesfnfile "%device2%%%sfnpath2%%%name2%%%ext2%" "file" &; if exist sfnfile && set /u sfnfile2=%sfnfile% && set sfnfile= ! endlocal && set "message=Abort: no available Short File Name found for "%device2%%%path2%%%name2%%%ext2%"" && set result= && goto :eov
if not exist name2 && set sfnfile2=%sfnfile1% &; if %SFN1%==N && set SFN2=N
if exist name2 && if not /i "%path2%"=="%path1%" &; if exist %device2%%%sfnpath2%%%sfnfile2% && set file2=1 && if not %LFN2%==Y && if not %o%==/o && endlocal && set "message=Abort: "%device2%%%path2%%%name2%%%ext2%" is an existing file" && set result= && goto :eov
if exist name2 && if not exist file2 && if not /i "%path2%"=="%path1%" &; fat dir %device2%%%sfnpath2%%%sfnfile2% > nul && endlocal && set "message=Abort: "%device2%%%path2%%%name2%%%ext2%" is an existing directory" && set result= && goto :eov
if %SFN2%==N && if exist name2 && set result= &; ATTRIBFT.LLL getsfn "%device2%%%sfnpath2%%%name2%%%ext2%" &; if exist result && if not %o%==/o && endlocal && set "message="%device2%%%path2%%%name2%%%ext2%" exists already" && set result= && goto :eov ! if exist result && set "lfnfile=%name2%%%ext2%" && set result= ! if exist message && set message=
if %SFN2%==N && if exist name2 && if exist file2 && if exist result && if "%result%"=="sfnfile2%" && if %LFN2%==Y && if %o%==/o && set result= && ATTRIBFT.LLL dellfn input="%output%" "%device2%%%sfnpath2%%%name2%%%ext2%" &; if exist result && set sfnfile2= && set result= ! endlocal && set "message=Abort: can not delete LFN on target "%device2%%%path2%%%name2%%%ext2%"" && set result= && goto :eov
if /i %filesysS:~0,3%==fat && if exist sfnfile1 && if exist name2 && if not %SFN1%==N && if %o%==/o && if "%name1%%%ext1%"=="%name2%%%ext2%" &; setlocal && ATTRIBFT.LLL getlfn input="%output%" "%device1%%%sfnpath1%%%sfnfile1%" &; endlocal && set "result=%result%" &; if exist result && set "lfnfile=%result%" && set SFN2=N && set result=
if %SFN1%==N && if not %SFN2%==N && if exist file2 && if %o%==/o && if "%sfnfile2%"=="%name2%%%ext2%" && ATTRIBFT.LLL getsfn input="%output%" "%device2%%%sfnpath2%%%name2%%%ext2%" &; if exist result && if "%result%"=="%sfnfile2%" && set result= && ATTRIBFT.LLL dellfn "%device2%%%sfnpath2%%%name2%%%ext2%" &; debug msg=0 &; if exist result && set LFN2= && set result= ! endlocal && set "message=BADdelLFN on target - run SCANDISKW or CHECKDSK from Windows etcetera" && set result= && goto :eov
if %SFN1%==N && if %SFN2%==N && if exist file2 && if %o%==/o && set result= &; setlocal && ATTRIBFT.LLL getlfn input="%output%" "%device1%%%sfnpath1%%%sfnfile1%" &; endlocal && set "result=%result%" &; if exist result && if not "%result%"=="%name2%%%ext2%" && set result= && ATTRIBFT.LLL dellfn "%device2%%%sfnpath2%%%result%" &; if exist result && set LFN2= && set result= ! endlocal && set "message=BADdelLFN on target - run SCANDISKW or CHECKDSK from Windows etcetera" && set result= && goto :eov
if %SFN2%==N && if exist file2 && if %o%==/o && if exist result && if "%result%"=="%name2%%%ext2%" && ATTRIBFT.LLL getsfn input="%output%" "%device2%%%sfnpath2%%%name2%%%ext2%" &; if %result%==%sfnfile2% && set SFN1= && set SFN2= && set lfnfile= && set LFN1= && set LFN2= ! if exist message && set message=
if %del%==/r && if %o%==/o && if not %file2%==1 &; if exist %device2%%%sfnpath2%%%sfnfile1% && set file2=1 ! set file2=
debug msg=1
raw cat --length=0 %device1%/"%path1:~1%%%name1%%%ext1%" | set argsize=
debug msg=0
if not exist argsize && endlocal && set "message=Abort: "%device1%%%path1%%%name1%%%ext1%" is a directory" && set result= && goto :eov
raw cat --length=0 %device1%/"%path1:~1%%%name1%%%ext1%" > nul ;; set /a argsize=%@retval% > nul
if not %argsize%>=0 && endlocal && set "message=Abort: filesize of "%device1%%%path1%%%name1%%%ext1%" is 4GB or higher" && set result= && goto :eov ! set /a argsize=%argsize%&0xffffffff > nul
if not /i %filesysS:~0,3%==fat && if not exist sfnfile2 && if %SFN1%==N &; call :makesfnfile "%device1%%%path1%%%name1%%%ext1%" "file" &; if exist sfnfile && set /u sfnfile2=%sfnfile% && set sfnfile= && set "lfnfile=%lfn%" && set lfn= ! endlocal && set "message=Abort: no available Short File Name found for "%device1%%%path1%%%name1%%%ext1%"" && set result= && goto :eov
if not /i %filesysS:~0,3%==fat && if exist sfnfile2 && if %SFN1%==N &; if "%lfnfile%"=="%sfnfile2%" && set lfnfile= && set SFN2= && set LFN2=
if not /i %filesysS:~0,3%==fat && if exist sfnfile2 && if exist %device2%%%sfnpath2%%%sfnfile2% && if not %o%==/o && endlocal && set "message=Abort: "%sfnfile2%" is an existing file on target" && set result= && goto :eov
if not /i %filesysS:~0,3%==fat && if exist sfnfile2 && fat dir %device2%%%sfnpath2%%%sfnfile2% > nul && endlocal && set "message=Abort: "%device2%%%sfnpath2%%%sfnfile2%" is an existing directory" && set result= && goto :eov
if not /i %filesysS:~0,3%==fat && call :ddcopy &; if %success%==Y && goto :makelfncopy ! endlocal && set "message=Abort: dd-copy failed" && set result= && goto :eov
if %argsize%==0 &; if exist %device2%%%sfnpath2%%%sfnfile2% && set success=Y && goto :makelfncopy ! errorcheck off
if %argsize%==0 &; fat mkfile size=%argsize% %device2%%%sfnpath2%%%sfnfile2% > nul && set success=Y && goto :makelfncopy ! endlocal && set "message=Abort: can not create zerobyte file "%device2%%%sfnpath2%%%sfnfile2%"" && set result= && goto :eov
errorcheck off
if exist sfnfile2 &; fat copy %o% %device1%%%sfnpath1%%%sfnfile1% %device2%%%sfnpath2%%%sfnfile2% > nul && set success=Y && set message= ! set success=N && set "message=Error: fat copy %o% %device1%%%sfnpath1%%%sfnfile1% %device2%%%sfnpath2%%%sfnfile2%"
## %result%=set_variables#
if %success%==N && if %del%==/r && if %o%==/o && if %file2%==1 && setlocal && ATTRIBFT.LLL getattrib "%device2%%%sfnpath2%%%sfnfile2%" &; %result% &; if %r%==r && endlocal && set "attrib=%result%" ! endlocal
if %success%==N && if %del%==/r && if %o%==/o && if %file2%==1 && if exist attrib && ATTRIBFT.LLL setattrib "%device2%%%sfnpath2%%%sfnfile2%" "-r" &; if exist result && set retry=1 && set result= ! endlocal && set "message=Abort: failed to remove attribute 'read-only'" && set result= && goto :eov
errorcheck off
if %retry%==1 && if /i %filesysS:~0,3%==fat && if exist sfnfile2 &; fat copy %o% %device1%%%sfnpath1%%%sfnfile1% %device2%%%sfnpath2%%%sfnfile2% > nul && set success=Y && set retry= && set message= ! set success=N && set "message=Error: fat copy %o% %device1%%%sfnpath1%%%sfnfile1% %device2%%%sfnpath2%%%sfnfile2%"
if %success%==N && endlocal && set %message=%message%" && set result= && goto :eov
#STRANGE?#if %success%==N && endlocal && echo Abort 1: FAT-error && set result=0 && goto :eov
if %a%==/a && if exist sfnfile2 && set attrib= && ATTRIBFT.LLL getattrib "%device1%%%sfnpath1%%%sfnfile1%" &; if exist result && set "attrib=%result%" && set success=Y && set result= ! set "message=Failed to get attribute(s) from "%device1%%%sfnpath1%%%sfnfile1%""
if %success%==Y && if exist attrib && setlocal && set r= && set h= && set s= && set a=
if %success%==Y && if exist attrib && %attrib%
if %success%==Y && if exist attrib && if %r%==r && set r=+r
if %success%==Y && if exist attrib && if %s%==s && set s=+s
if %success%==Y && if exist attrib && if %h%==h && set h=+h
if %success%==Y && if exist attrib && endlocal && set "attrib=%r%%%s%%%h%"
if %success%==Y && if not exist a && if exist attrib && if %file2%==1 && ATTRIBFT.LLL setattrib "%device2%%%sfnpath2%%%sfnfile2%" "%attrib%" &; if exist result && set result= && set attrib= ! set "message=Failed to set attribute(s) %attrib% on "%device2%%%sfnpath2%%%sfnfile2%"" && set attrib=
if %success%==Y && if %a%==/a && if exist attrib && if exist sfnfile2 && ATTRIBFT.LLL setattrib "%device2%%%sfnpath2%%%sfnfile2%" "%attrib%" &; if exist result && set result= && set attrib= ! set "message=Failed to set attribute(s) %attrib% on "%device2%%%sfnpath2%%%sfnfile2%"" && set attrib=
errorcheck off
if /i %filesysS:~0,3%==fat && if not exist sfnfile2 && if not /i %sfnpath1%==%sfnpath2% &; fat copy %o% %device1%%%sfnpath1%%%sfnfile1% %device2%%%sfnpath2% > nul && set success=Y && set message= ! set success=N && set "message=Error: fat copy %o% %device1%%%sfnpath1%%%sfnfile1% %device2%%%sfnpath2%%%sfnfile2%"
if %success%==N && if %del%==/r && if %o%==/o && if not exist sfnfile2 && setlocal && ATTRIBFT.LLL getattrib "%device2%%%sfnpath2%%%sfnfile1%" &; %result% &; if %r%==r && endlocal && set "attrib=%result%" ! endlocal
if %success%==N && if %del%==/r && if %o%==/o && if not exist sfnfile2 && if exist attrib && ATTRIBFT.LLL setattrib "%device2%%%sfnpath2%%%sfnfile1%" "-r" &; if exist result && set retry=1 && set result= ! endlocal && set "message=Abort: failed to remove attribute 'read-only'" && set result= && goto :eov
if %retry%==1 && if /i %filesysS:~0,3%==fat && if not exist sfnfile2 &; fat copy %o% %device1%%%sfnpath1%%%sfnfile1% %device2%%%sfnpath2% > nul && set success=Y && set retry= && set message= ! set success=N && set "message=Error: fat copy %o% %device1%%%sfnpath1%%%sfnfile1% %device2%%%sfnpath2%"
#NOT#if %success%==N && if %del%==/r && if %o%==/o && if %file2%==1 && ATTRIBFT.LLL isreadonly "%device2%%%sfnpath2%%%sfnfile2%" &; debug msg=0 &; if %result%==1 && set result= &; ATTRIBFT.LLL setattrib "%device2%%%sfnpath2%%%sfnfile2%" "-r" &; debug msg=0 &; if %result%==1 && set retry=1 && set result= ! endlocal && echo Abort: failed to remove attribute 'read-only' && set result=0 && goto :eov
if %success%==N && endlocal && set "message=%message%" && set result=0 && goto :eov
if %a%==/a && if not exist sfnfile2 && set attrib= && ATTRIBFT.LLL getattrib "%device1%%%sfnpath1%%%sfnfile1%" &; if exist result && set "attrib=%result%" && set success=Y && set result= ! set "message=Failed to get attribute(s) from "%device1%%%sfnpath1%%%sfnfile1%""
if %success%==Y && if exist attrib && setlocal && set r= && set h= && set s= && set a=
if %success%==Y && if exist attrib && %attrib%
if %success%==Y && if exist attrib && if %r%==r && set r=+r
if %success%==Y && if exist attrib && if %s%==s && set s=+s
if %success%==Y && if exist attrib && if %h%==h && set h=+h
if %success%==Y && if exist attrib && endlocal && set "attrib=%r%%%s%%%h%"
if %success%==Y && if not exist a && if exist attrib && if not exist sfnfile2 && ATTRIBFT.LLL setattrib "%device2%%%sfnpath2%%%sfnfile1%" "%attrib%" &; if exist result && set result= && set attrib= ! set "message=Failed to set attribute(s) %attrib% on "%device2%%%sfnpath2%%%sfnfile1%"" && set attrib=
if %success%==Y && if %a%==/a && if exist attrib && if not exist sfnfile2 && ATTRIBFT.LLL setattrib "%device2%%%sfnpath2%%%sfnfile1%" "%attrib%" &; if exist result && set result= && set attrib= ! set "message=Failed to set attribute(s) %attrib% on "%device2%%%sfnpath2%%%sfnfile1%"" && set attrib=
:makelfncopy
if not exist sfnfile2 && set sfnfile2=%sfnfile1%
if %CASE1%==Y && if not exist name2 && set SFN2=N && set LFN2=Y && set "lfnfile=%name1%%%ext1%" && if exist %device2%%%sfnpath2%%%sfnfile1% && set file2=1
if %CASE2%==Y && if exist name2 && set SFN2=N && set LFN2=Y && set "lfnfile=%name2%%%ext2%" && if exist %device2%%%sfnpath2%%%sfnfile2% && set file2=1
if %CASE1%==Y && if %SFN2%==N && if %file2%==1 && ATTRIBFT.LLL getlfn "%device2%%%sfnpath2%%%sfnfile1%" &; if exist result && set "lfnfile=%result%" && set LFN2=Y && set result= ! if exist message && set message=
if %CASE2%==Y && if %SFN2%==N && if exist name2 && if %file2%==1 && ATTRIBFT.LLL getlfn "%device2%%%sfnpath2%%%name2%%%ext2%" &; if exist result && set "lfnfile=%result%" && set LFN2=Y && set result= ! if exist message && set message=
## dellfn really needed on target?
if %success%==Y && set result=1 && if %SFN2%==N && if %LFN2%==Y && if exist name2 && if not "%name2%%%ext2%"=="%lfnfile%" && set result= &; ATTRIBFT.LLL dellfn input="%output%" "%device2%%%sfnpath2%%%name2%%%ext2%" &; if exist result && set result= ! endlocal && set "message=%message%" && set result= && goto :eov
if %success%==Y && set result=1 && if %file2%==1 && if %SFN2%==N && if %LFN2%==Y && if not exist name2 && if not "%name1%%%ext1%"=="%lfnfile%" && set result= &; ATTRIBFT.LLL dellfn input="%output%" "%device2%%%sfnpath2%%%name1%%%ext1%" &; if exist result && set result= ! endlocal && set "message=%message%" && set result= && goto :eov
if %success%==Y && set result=1 && if not %SFN2%==N && if exist name2 && if not %CASE2%==Y && set result= &; ATTRIBFT.LLL dellfn input="%output%" "%device2%%%sfnpath2%%%name2%%%ext2%" &; if exist result && set result= ! endlocal && set "message=%message%" && set result= && goto :eov
if %success%==Y && set result=1 && if %SFN2%==N && if %LFN2%==Y && if exist name2 && set result= &; ATTRIBFT.LLL makelfn input="%output%" "%device2%%%sfnpath2%%%name2%%%ext2%" "%sfnfile2%" &; if not exist result && endlocal && set "message=%message%" && set result= && goto :eov
if %success%==Y && set result=1 && if %SFN2%==N && if %LFN2%==Y && if not exist name2 && set result= &; ATTRIBFT.LLL makelfn input="%output%" "%device2%%%sfnpath2%%%name1%%%ext1%" "%sfnfile2%" &; if not exist result && endlocal && set "message=%message%" && set result= && goto :eov
if %success%==Y && set result=1 && if %SFN2%==N && if not %LFN2%==Y && if exist name2 && set result= &; ATTRIBFT.LLL makelfn input="%output%" "%device2%%%sfnpath2%%%name2%%%ext2%" "%sfnfile2%" &; if not exist result && endlocal && set "message=%message%" && set result= && goto :eov
if %success%==Y && set result=1 && if %SFN2%==N && if not %LFN2%==Y && if not exist name2 && if exist lfnfile && set result= &; ATTRIBFT.LLL makelfn "%device2%%%sfnpath2%%%lfnfile%" "%sfnfile2%" &; if not exist result && endlocal && set "message=%message%" && set result= && goto :eov
if exist result && set result=1
endlocal && set result=%result% && set "message=%message%"
goto :eov
::
:dir
setlocal && set *
set "ARG2=%~2" &; if %ARG2:~0,2%==/a && if not "%~3"=="" && set a=%ARG2% && set ARG2= && shift
if "%~2"=="" && endlocal && set "message=Abort: device and/ or path missing" && set result= && goto :eov
if /i "%~3"=="> nul" && set "NULL= > nul"
if not exist NULL && if not "%~3"=="" && endlocal && set "message=Abort: too many arguments, argument "%~3" is not valid" && set result= && goto :eov
if exist NULL && if not "%~4"=="" && endlocal && set "message=Abort: too many arguments, argument "%~4" is not valid" && set result= && goto :eov
call :checkforbiddenchars "%~2" &; if %forbiden%==Y && endlocal && set "message=Abort: forbidden chars in "%~2"" && set result= && goto :eov
set device=%~d2 &; fat info %device% > nul || endlocal && set "message=Abort: target "%device%" is not a fat device" && set result= && goto :eov
if %device%==(md) && endlocal && set "message=Abort: device "%device%" is not valid" && set result= && goto :eov
set "path=%~p2"
set "name=%~n2"
if "%name:~-1,1%"=="\" && set "name=%name:~0,-1%"
set "ext=%~x2" &; if "%ext%"=="." && set ext=
if "%ext:~-1,1%"=="\" && set "ext=%ext:~0,-1%"
if "%ext%"=="." && set ext=
:dirnospacedotloop
if exist ext && call Fn.11 "%ext:~-1,1%" " " && set "ext=%ext:~0,-1%" && goto :dirnospacedotloop
if not exist ext && call Fn.11 "%name:~-1,1%" " " && set "name=%name:~0,-1%" && goto :dirnospacedotloop
if not exist ext && call Fn.11 "%name:~-1,1%" "." && set "name=%name:~0,-1%" && goto :dirnospacedotloop
if "%ext%"=="." && set ext=
if exist name && set "path=%path%%%name%%%ext%" ! if not "%path%"=="/" && set "path=%path:~0,-1%"
if "%path%"=="/" && set sfnpath=/
if not exist sfnpath && echo -e "%path%" | set path= &; set "path=%path:~1,-1%"
if not "%sfnpath%"=="/" && ATTRIBFT.LLL getsfnpath "%device%%%path%/" &; if exist result && set /u sfnpath=%result:~0,-1% && set "outputOK=%output%" && set result= ! endlocal && set "message=Abort: Short File Name path not found" && set result= && goto :eov
if not exist sfnpath && endlocal && set "message=Abort: Short File Name path not found" && set result= && goto :eov
#ADDlfn2path#
if not "%sfnpath%"=="/" && setlocal && set mdbase=0x300 &; echo -n > (md)%mdbase%+1 && pause --wait=0 %sfnpath%/ > (md)%mdbase%+1 && cat --locate=/ --replace=\x20 (md)%mdbase%+1 > nul && cat (md)%mdbase%+1 | call :getlfnpath &; if exist lfnpath && endlocal && set "path=%lfnpath%" ! endlocal
## Extra space in next call is needed
fat dir %a% %device%%%sfnpath% | call :fatdir  &; if not exist message && if %error%>=1 && set "message=Not parsed %error% folders/ files"
endlocal && set result=%result% && set "message=%message%"
goto :eov
::
:fatdir
setlocal && set * && set "path=%path%" && set device=%device% && set sfnpath=%sfnpath% && set pagerst=%pagerst% && set "NULL=%NULL%"
set ARG1=%~1 && set ARG2=%~2
if /i %ARG2:~0,5%==dir:[ && set ARG2= && shift
if /i %ARG1%==FAT && set ARG1= && shift
if not exist ARG1 if not exist ARG2 || endlocal && set "message=Error: can not parse %device%%%sfnpath%" && set result= && goto :eof
echo -e FAT$[0x00]"$[0x07]dir:[%path%]$[0x00]"%NULL%
if "%sfnpath%"=="/" && set sfnpath=
##  with "> nul": if result=0: directory exist and is empty, and >=1 count of (SFN) Directory entries
set error=0 && if exist NULL && set tmprslt=0
:fatdirloop
if not exist NULL &; if not exist @uefi &; if %lastkey%==Q && endlocal && set result=%temprslt% && set error=%error% && goto :eof ! if exist lastkey && set lastkey=
if not exist NULL &; if not exist @uefi &; setlocal && set * && call :lastkey "Esc" &; if not %lastkey%==0x51 && if not %lastkey%==0x71 && endlocal && set lastkey=%ls% ! endlocal && endlocal && set result=%temprslt% && set error=%error% && goto :eof
set ARG1= && set ARG2= && set ARG3= && set ARG3name= && set ARG3ext= && set ARG4= && set DATE= && set TIME= && set DIRNAME= && set DIREXT= && set FILENAME= && set FILEEXT= && set FILESIZE= && set lfnfile= && set ARG5= && set y= && set message=
if exist NULL &; if "%~1"=="" && endlocal && set result=%tmprslt% && set error=%error% && set "message=%message%" && goto :eof
if not exist NULL &; if "%~1"=="" && endlocal && set result=%temprslt% && set error=%error% && goto :eof
set ARG1=%~1 && set ARG2=%~2 && set ARG3=%~3 && set ARG3name=%~n3 && set ARG3ext=%~x3 && set ARG4=%~4 && set ARG5=%~5
if %ARG1:~4,1%==- && if %ARG1:~7,1%==- && set DATE=%ARG1%
if %ARG2:~2,1%==: && if %ARG2:~5,1%==: && set TIME=%ARG2%
if %ARG3:~0,1%==< && if %ARG3:~-1,1%==> &; if exist ARG3ext && set DIRNAME=%ARG3name:~1% && set DIREXT=%ARG3ext:~0,-1% ! set DIRNAME=%ARG3:~1,-1%
if not exist DIRNAME && set FILENAME=%ARG3name% &; set /a x=30-%@retval% > nul && set FILEEXT=%ARG3ext% && set FILESIZE=%ARG4%
if exist DIRNAME && set DIRNAME=%DIRNAME% &; if not %@retval%<=8 && set temprslt=1 && set /a error=%error%+1 > nul && goto :fatdirend
if exist DIREXT && set DIREXT=%DIREXT% &; if not %@retval%<=4 && set temprslt=1 && set /a error=%error%+1 > nul && goto :fatdirend
if exist FILENAME && set FILENAME=%FILENAME% &; if not %@retval%<=8 && set temprslt=1 && set /a error=%error%+1 > nul && goto :fatdirend
if exist FILEEXT && set FILEEXT=%FILEEXT% &; if not %@retval%<=4 && set temprslt=1 && set /a error=%error%+1 > nul && goto :fatdirend
if exist DIRNAME && ATTRIBFT.LLL getlfn input="%output%" "%device%%%sfnpath%/%DIRNAME%%%DIREXT%" &; if exist result && set "lfnfile=%result%" && set result= ! set "output=%outputOK%" && if "%message:~0,6%"=="LFN of" && set message=
if exist FILESIZE && if /i %ARG5%==KB && set FILESIZE=%FILESIZE%\x20KB && shift
if exist FILENAME && if exist FILESIZE && ATTRIBFT.LLL getlfn input="%output%" "%device%%%sfnpath%/%FILENAME%%%FILEEXT%" &; if exist result && set "lfnfile=%result%" && set result= ! set "output=%outputOK%" && if "%message:~0,6%"=="LFN of" && set message=
if not exist NULL &; call Fn.4 ;; set /a y=%@retval%>>8 > nul
if not exist NULL &; if not exist lfnfile && if exist DATE && if exist TIME && if exist DIRNAME && call :Fn.5 0 %y% && echo -n -e %DATE%\x20%TIME% && call :Fn.5 31 %y% && echo -e $[0x00] $[0x07]<%DIRNAME%%%DIREXT%>\t$[0x08]%message:~0,22%
if not exist NULL &; if exist lfnfile && if exist DATE && if exist TIME && if exist DIRNAME && call :Fn.5 0 %y% && echo -P:%y%%00 -n -e %DATE%\x20%TIME% && call :Fn.5 31 %y% && echo -e $[0x00]"$[0x07]<%lfnfile%>$[0x00]"
if not exist NULL &; if not exist lfnfile && if exist DATE && if exist TIME && if exist FILENAME && if exist FILESIZE && call :Fn.5 0 %y% && echo -n -e %DATE%\x20%TIME%\x20%FILESIZE% && call :Fn.5 31 %y% && echo -n -e $[0x00] $[0x07]%FILENAME% && call :Fn.5 41 %y% && echo -e %FILEEXT:~1%\t$[0x08]%message:~0,22%
if not exist NULL &; if exist lfnfile && if exist DATE && if exist TIME && if exist FILENAME && if exist FILESIZE && call :Fn.5 0 %y% && echo -n -e %DATE%\x20%TIME%\x20%FILESIZE% && call :Fn.5 31 %y% && echo -e $[0x00]"$[0x07]%lfnfile%$[0x00]"
if exist NULL &; set /a tmprslt=%tmprslt%+1
set temprslt=1
:fatdirend
if exist FILENAME && shift
shift
shift
shift
set temprslt=1
goto :fatdirloop
::
:dirx
setlocal && set *
set "ARG2=%~2" &; if %ARG2:~0,2%==/a && if not "%~3"=="" && set a=%ARG2% && set ARG2= && shift
if "%~2"=="" && endlocal && set "message=Abort: device and/ or path missing" && set result= && goto :eov
if /i "%~3"=="> nul" && set "NULL= > nul"
if not exist NULL && if not "%~3"=="" && endlocal && set "message=Abort: too many arguments, argument "%~3" is not valid" && set result= && goto :eov
if exist NULL && if not "%~4"=="" && endlocal && set "message=Abort: too many arguments, argument "%~4" is not valid" && set result= && goto :eov
call :checkforbiddenchars "%~2" &; if %forbiden%==Y && endlocal && set "message=Abort: forbidden chars in "%~2"" && set result= && goto :eov
set device=%~d2 &; fat info %device% > nul || endlocal && set "message=Abort: target "%device%" is not a fat device" && set result= && goto :eov
if %device%==(md) && endlocal && set "message=Abort: device "%device%" is not valid" && goto :eov
set "path=%~p2"
set "name=%~n2"
if "%name:~-1,1%"=="\" && set "name=%name:~0,-1%"
set "ext=%~x2" &; if "%ext%"=="." && set ext=
if "%ext:~-1,1%"=="\" && set "ext=%ext:~0,-1%"
if "%ext%"=="." && set ext=
:dirxnospacedotloop
if exist ext && call Fn.11 "%ext:~-1,1%" " " && set "ext=%ext:~0,-1%" && goto :dirxnospacedotloop
if not exist ext && call Fn.11 "%name:~-1,1%" " " && set "name=%name:~0,-1%" && goto :dirxnospacedotloop
if not exist ext && call Fn.11 "%name:~-1,1%" "." && set "name=%name:~0,-1%" && goto :dirxnospacedotloop
if "%ext%"=="." && set ext=
if exist name && set "path=%path%%%name%%%ext%" ! if not "%path%"=="/" && set "path=%path:~0,-1%"
if "%path%"=="/" && set sfnpath=/
if not exist sfnpath && echo -e "%path%" | set path= &; set "path=%path:~1,-1%"
if "%sfnpath%"=="/" && ATTRIBFT.LLL getsfnpath "%device%/" &; if exist result && set /u sfnpath=/ && set "outputOK=%output%" && set result= ! endlocal && set "message=Abort: Short File Name path not found" && set result= && goto :eov
if not "%sfnpath%"=="/" && ATTRIBFT.LLL getsfnpath "%device%%%path%/" &; if exist result && set /u sfnpath=%result:~0,-1% && set "outputOK=%output%" && set result= ! endlocal && set "message=Abort: Short File Name path not found" && set result= && goto :eov
if not exist sfnpath && endlocal && set "message=Abort: Short File Name path not found" && set result= && goto :eov
#ADDlfn2path#
if not "%sfnpath%"=="/" && setlocal && set mdbase=0x300 &; echo -n > (md)%mdbase%+1 && pause --wait=0 %sfnpath%/ > (md)%mdbase%+1 && cat --locate=/ --replace=\x20 (md)%mdbase%+1 > nul && cat (md)%mdbase%+1 | call :getlfnpath &; if exist lfnpath && endlocal && set "path=%lfnpath%" ! endlocal
## Extra space in next call is needed
fat dir %a% %device%%%sfnpath% | call :fatdirx  &; if not exist message && if %error%>=1 && echo -e \x20\x20$[0x08]Not parsed %error% folders/ files
endlocal && set result=%result% && set "message=%message%"
goto :eov
::
:fatdirx
setlocal && set * && set "path=%path%" && set device=%device% && set sfnpath=%sfnpath% && set pagerst=%pagerst% && set "NULL=%NULL%"
set ARG1=%~1 && set ARG2=%~2
if /i %ARG2:~0,5%==dir:[ && set ARG2= && shift
if /i %ARG1%==FAT && set ARG1= && shift
if not exist ARG1 if not exist ARG2 || endlocal && set "message=Error: can not parse %device%%%sfnpath%" && set result= && goto :eof
## echo -e does not work with \x22, so " only
if not exist NULL &; if not "%sfnpath%"=="%path%" && echo -e FAT dir:[%sfnpath%]$[0x00]"$[0x07][%path%]$[0x00]"
if not exist NULL &; if "%sfnpath%"=="%path%" && echo FAT dir:[%sfnpath%]
if "%sfnpath%"=="/" && set sfnpath=
set error=0 && if exist NULL && set tmprslt=0
:fatdirxloop
if not exist NULL &; if not exist @uefi &; if %lastkey%==Q && endlocal && set result=%temprslt% && set error=%error% && goto :eof ! if exist lastkey && set lastkey=
if not exist NULL &; if not exist @uefi &; setlocal && set * && call :lastkey "Esc" &; if not %lastkey%==0x51 && if not %lastkey%==0x71 && endlocal && set lastkey=%ls% ! endlocal && endlocal && set result=%temprslt% && set error=%error% && goto :eof
set ARG1= && set ARG2= && set ARG3= && set ARG3name= && set ARG3ext= && set ARG4= && set DATE= && set TIME= && set DIRNAME= && set DIREXT= && set FILENAME= && set FILEEXT= && set FILESIZE= && set lfnfile= && set ARG5= && set y= && set message=
if exist NULL &; if "%~1"=="" && endlocal && set result=%tmprslt% && set error=%error% && set "message=%message%" && goto :eof
if not exist NULL &; if "%~1"=="" && endlocal && set result=%temprslt% && set error=%error% && goto :eof
set ARG1=%~1 && set ARG2=%~2 && set ARG3=%~3 && set ARG3name=%~n3 && set ARG3ext=%~x3 && set ARG4=%~4 && set ARG5=%~5
if %ARG1:~4,1%==- && if %ARG1:~7,1%==- && set DATE=%ARG1%
if %ARG2:~2,1%==: && if %ARG2:~5,1%==: && set TIME=%ARG2%
if not exist DATE if not exist TIME |; if %ARG3:~0,1%==< && if %ARG3:~-1,1%==> &; if exist ARG3ext && set DIRNAME=%ARG3name:~1% && set DIREXT=%ARG3ext:~0,-1% ! set DIRNAME=%ARG3:~1,-1%
if exist DIRNAME && set DIRNAME=%DIRNAME% &; if not %@retval%<=8 && set temprslt=1 && set /a error=%error%+1 > nul && goto :fatdirxend
if exist DIREXT && set DIREXT=%DIREXT% &; if not %@retval%<=4 && set temprslt=1 && set /a error=%error%+1 > nul && goto :fatdirxend
if not exist DATE if not exist TIME |; if not exist DIRNAME && set FILEEXT=%ARG3ext% && set FILESIZE=%ARG4% && set FILENAME=%ARG3name%
if exist FILENAME && set FILENAME=%FILENAME% &; if not %@retval%<=8 && set temprslt=1 && set /a error=%error%+1 > nul && goto :fatdirxend
if exist FILEEXT && set FILEEXT=%FILEEXT% &; if not %@retval%<=4 && set temprslt=1 && set /a error=%error%+1 > nul && goto :fatdirxend
## first to attempt after restart give no good call Fn.4 with echo's longer than a line
if exist DIRNAME && ATTRIBFT.LLL getlfn input="%output%" "%device%%%sfnpath%/%DIRNAME%%%DIREXT%" &; debug msg=0 &; if exist result && set "lfnfile=%result%" && set result= ! set "output=%outputOK%" && if "%message:~0,6%"=="LFN of" && set message=
if exist FILESIZE && if /i %ARG5%==KB && set FILESIZE=%FILESIZE%\x20KB && shift
if exist FILENAME && if exist FILESIZE && ATTRIBFT.LLL getlfn input="%output%" "%device%%%sfnpath%/%FILENAME%%%FILEEXT%" &; debug msg=0 &; if exist result && set "lfnfile=%result%" && set result= !  set "output=%outputOK%" && if "%message:~0,6%"=="LFN of" && set message=
if not exist NULL &; call Fn.4 ;; set /a y=%@retval%>>8 > nul
if not exist NULL &; if exist lfnfile && if exist DIRNAME && call :Fn.5 0 %y% && echo -e -n <%DIRNAME%%%DIREXT%> && call :Fn.5 24 %y% && echo -e $[0x00]"$[0x07]<%lfnfile%>$[0x00]"
if not exist NULL &; if not exist lfnfile && if exist message && if exist DIRNAME && call :Fn.5 0 %y% && echo -e -n <%DIRNAME%%%DIREXT%> && call :Fn.5 24 %y% && echo -e $[0x00]"$[0x08]%message%$[0x00]"
if not exist NULL &; if not exist lfnfile && if not exist message && if exist DIRNAME && call :Fn.5 0 %y% && echo -e <%DIRNAME%%%DIREXT%>
if not exist NULL &; if exist lfnfile && if exist FILENAME && if exist FILESIZE && call :Fn.5 0 %y% && echo -e -n %FILENAME% && call :Fn.5 10 %y% && echo -e -n %FILEEXT:~1% && call :Fn.5 14 %y% && echo -n -e %FILESIZE% && call :Fn.5 24 %y% && echo -e $[0x00]"$[0x07]%lfnfile%$[0x00]"
if not exist NULL &; if not exist lfnfile && if exist message && if exist FILENAME && if exist FILESIZE && call :Fn.5 0 %y% && echo -e -n %FILENAME% && call :Fn.5 10 %y% && echo -n -e %FILEEXT:~1% && call :Fn.5 14 %y% && echo -e -n %FILESIZE% && call :Fn.5 24 %y% && echo -e $[0x00]"$[0x08]%message%$[0x00]"
if not exist NULL &; if not exist lfnfile && if not exist message && if exist FILENAME && if exist FILESIZE && call :Fn.5 0 %y% && echo -e -n %FILENAME% && call :Fn.5 10 %y% && echo -n -e %FILEEXT:~1% && call :Fn.5 14 %y% && echo -e %FILESIZE%
#OKE_SOMETIME_OVERSHOOT#if exist DIRNAME && echo -P:%y%%00 -n -e <%DIRNAME%%%DIREXT%> && if exist lfnfile && echo -P:%y%%27 -n -e $[0x00]"$[0x07]<%lfnfile%>$[0x00]"
#OKE_SOMETIME_OVERSHOOT#if exist FILENAME && if exist FILESIZE && echo -P:%y%%00 -n -e %FILENAME% && echo -P:%y%%10 -n -e %FILEEXT:~1% && echo -P:%y%%15 -n -e %FILESIZE% && if exist lfnfile && echo -P:%y%%27 -n -e $[0x00]"$[0x07]%lfnfile%$[0x00]"
if exist NULL &; if exist lfnfile && set /a tmprslt=%tmprslt%+1
set temprslt=1
:fatdirxend
if exist FILENAME && shift
shift
shift
shift
goto :fatdirxloop
::
:getcase
setlocal && set *
errorcheck off
## Seems to be needed???
set mdbase=0x300
set device=%~d1
set "path=%~p1"
set "testfile=%~nx1"
if not exist %device%/"%path:~1%%%testfile%" && endlocal && goto :eof
call Fn.11 "%testfile%" "\x3D" && echo "%testfile%" > (md)%mdbase%+1 && cat --locate=\x3D --replace=\x3F (md)%mdbase%+1 && set qmark=Y && cat (md)%mdbase%+1 | set testfile= &; set "testfile=%testfile:~1,-1%"
ls %device%/"%path:~1%%%testfile%" | call :case
#OLD?#if not exist dirname && call Fn.11 "%testname:~1%" "~" && set /u dirname=%testname%
endlocal && set "name=%name%" && set "ext=%ext%" && set result=%result%
goto :eof
::
:case
if "%~1"=="" && if %qmark%==Y && set qmark= &; echo "%testfile%" > (md)%mdbase%+1 && cat --locate=\x3F --replace=\x3D (md)%mdbase%+1 && cat (md)%mdbase%+1 | set testfile= &; set "testfile=%testfile:~1,-1%"
if "%~1"=="" && goto :eof
set "name=%~n1" &; echo -e "%name%" | set name= &; set "name=%name:~1,-1%"
set "ext=%~x1" &; echo -e "%ext%" | set ext= &; set "ext=%ext:~1,-1%"
if not /i "%name%%%ext%"=="%testfile%" && set result=0 && set name= && set ext= && shift && goto :case
set result=
shift
goto :case
::
:checksfnpath
## No test of UTF-8 chars!
setlocal && set SFNPATH=
set mdbase=0x300
set "path=%~1"
call Fn.11 "%path%" " " && endlocal && set SFNPATH=N && goto :eof
call Fn.11 "%path%" "+" && endlocal && set SFNPATH=N && goto :eof
call Fn.11 "%path%" ";" && endlocal && set SFNPATH=N && goto :eof
call Fn.11 "%path%" "," && endlocal && set SFNPATH=N && goto :eof
call Fn.11 "%path%" "[" && endlocal && set SFNPATH=N && goto :eof
call Fn.11 "%path%" "]" && endlocal && set SFNPATH=N && goto :eof
call Fn.11 "%path%" "{" && endlocal && set SFNPATH=N && goto :eof
call Fn.11 "%path%" "}" && endlocal && set SFNPATH=N && goto :eof
call Fn.11 "%path%" "=" && endlocal && set SFNPATH=N && goto :eof
call Fn.11 "%path%" "?" && endlocal && set SFNPATH=N && goto :eof
echo "%path%" > (md)%mdbase%+1
#NOTNEEDEDANYMORE#call Fn.11 "%path%" " " && call :lsspaces
cat --locate=/ --replace=\x20 (md)%mdbase%+1 > nul
cat --locate=\x22 --replace=\x20 (md)%mdbase%+1 > nul
cat --locate=\x3D --replace=\x3F (md)%mdbase%+1 > nul && set qmark=Y
cat (md)%mdbase%+1 | call :finddirectory
endlocal && set SFNPATH=%SFNPATH%
goto :eof
::
:getlfnpath
if "%~1"=="" && goto :eof
set lfn= && set sfn= && set message=
ATTRIBFT.LLL getsfn "%device%%%lfnpath%/%~1" &; if exist result && if "%result%"=="%~1" && set sfn=%~1 ! if exist result && set "lfn=%result=%" && set result= ! set /u "sfn=%~1"
if exist sfn &; ATTRIBFT.LLL getlfn "%device%%%lfnpath%/%sfn%" &; if exist result && set "lfn=%result%" && set result=
if not exist sfn && if not exist lfn && set /u sfn=%~1
if exist lfn && set "lfnpath=%lfnpath%/%lfn%" ! set "lfnpath=%lfnpath%/%sfn%"
shift
goto :getlfnpath
::
:lsspaces
setlocal
set mdbase=0x300
set numspace= && set skip=0
cat --locate=\x20 (md)%mdbase%+1 > nul ;; set /a numspace=%@retval% > nul
if %numspace%==0 && endlocal && goto :eof
:looplsspaces
cat --skip=%skip% --locate=\x20 --number=1 (md)%mdbase%+1 > nul &; set /a skip=%?% > nul
set /A seek=%skip%+1 > nul
raw dd if=(md)%mdbase%+1 of=(md)%mdbase%+1 bs=1 skip=%skip% seek=%seek% > nul
cat --skip=%skip% --locate=\x20 --replace=\x5C --number=1 (md)%mdbase%+1 > nul
set /a numspace=%numspace% - 1 > nul
if %numspace%==0 && endlocal && set lsspaces=Y && goto :eof
set /A skip=%skip% + 2 > nul
goto :looplsspaces
::
:finddirectory
if "%~1"=="" && goto :eof
set "arg=%~1" &; set larg=%@retval% &; set /a larg=%larg% > nul
set "argname=%~n1" &; set largname=%@retval% &; set /a largname=%largname% > nul
set "argext=%~x1" &; set largext=%@retval% &; set /a largext=%largext% > nul
if %larg%>=13 && set SFNPATH=N
if %largname%>=9 && set SFNPATH=N
if %largext%>=5 && set SFNPATH=N
call Fn.11 "%argname%" "." && set SFNPATH=N
if not %SFNPATH%==N && shift && goto :finddirectory
goto :eof
::
:ddcopy
setlocal
set mdbase=0x300
set "file1=%device1%%%path1%%%name1%%%ext1%"
call Fn.11 "%file1%" "\x20" && echo %file1% > (md)%mdbase%+1 && call :lsspaces &; cat (md)%mdbase%+1 | set file1=
raw crc32 %file1% > nul ;; set /A CRC32SRC=%@retval%&0xffffffff > nul
## Unsigned value to prevent negative argsize with almost 4 GB-file above 0x7FFFFFF
if exist %device2%%%sfnpath2%%%sfnfile2% && if %o%==/o && if %del%==/r && setlocal && ATTRIBFI.LLL getattrib "%device2%%%sfnpath2%%%sfnfile2%" &; %result% &; if %r%==r && endlocal && set attrib=r ! endlocal && set attrib=
if exist %device2%%%sfnpath2%%%sfnfile2% && if %o%==/o && if %attrib%==r && ATTRIBFT.LLL setattrib "%device2%%%sfnpath2%%%sfnfile2%" "-r" &; if not exist result && endlocal && set "message=Abort: failed to remove attribute 'read-only' on "%device2%%%sfnpath2%%%sfnfile2%"" && set success= && set result= && goto :eov
errorcheck off
if exist %device2%%%sfnpath2%%%sfnfile2% &; if %o%==/o && fat del %device2%%%sfnpath2%%%sfnfile2% > nul && set deleted=Y ! endlocal && set "message=Abort: can not delete "%device2%%%sfnpath2%%%sfnfile2%" without switch '/o'" && set result= && goto :eof
if exist %device2%%%sfnpath2%%%sfnfile2% && if not %deleted%==Y && endlocal && set "message=Error: can not delete "%device2%%%sfnpath2%%%sfnfile2%"" && set success= && set result= && goto :eof
errorcheck off
fat mkfile size=%argsize% %device2%%%sfnpath2%%%sfnfile2% > nul && set created=Y ! endlocal && set "message=Abort: can not create "%device2%%%sfnpath2%%%sfnfile2%"" && set success= && set result= && goto :eof
if %created%==Y && if %argsize%==0 && endlocal && set success=Y && goto :eof
raw cat --length=0 %device2%%%sfnpath2%%%sfnfile2% > nul ;; if not %argsize%==%@retval%&0xffffffff && goto :eof
## "raw" needed to overcome gzip/lzma errors
if not exist file1 && raw dd if=%device1%%%path1%%%name1%%%ext1% of=%device2%%%sfnpath2%%%sfnfile2% > nul && set copied=Y
if exist file1 && raw dd if=%file1% of=%device2%%%sfnpath2%%%sfnfile2% > nul && set copied=Y
if not %copied%==Y && endlocal && goto :eof
raw crc32 %device2%%%sfnpath2%%%sfnfile2% > nul ;;  set /A CRC32TGT=%@retval%&0xffffffff > nul
if %CRC32SRC%==%CRC32TGT% && set success=Y
endlocal && set success=%success%
goto :eof
::
:checksfn
## No test of UTF-8 chars!
setlocal && set *
set "arg=%~1" &; set larg=%@retval% &; set /a larg=%larg% > nul
set "argname=%~n1" &; set largname=%@retval% &; set /a largname=%largname% > nul
set "argext=%~x1" &; set largext=%@retval% &; set /a largext=%largext% > nul
if %larg%>=13 && endlocal && set SFN=N && goto :eof
if %largname%>=9 && endlocal && set SFN=N && goto :eof
if %largext%>=5 && endlocal && set SFN=N && goto :eof
call Fn.11 "%arg%" "\ " && endlocal && set SFN=N && goto :eof
call Fn.11 "%arg%" " " && endlocal && set SFN=N && goto :eof
call Fn.11 "%argname%" "." && endlocal && set SFN=N && goto :eof
if not %SFN%==N && set SFN=N &; call Fn.11 "%arg%" "[" || call Fn.11 "%arg%" "]" || call Fn.11 "%arg%" "{" || call Fn.11 "%arg%" "}" || call Fn.11 "%arg%" "+" || call Fn.11 "%arg%" "=" || call Fn.11 "%arg%" ";" || call Fn.11 "%arg%" "," || set SFN=
if not %SFN%==N && set /u "HIGHCASE=%argname%%%argext%" &; if not "%HIGHCASE%"=="%argname%%%argext%" && set CASE=Y
#TooMuch#if not %SFN%==N && set SFN=N &; call Fn.11 "%arg%" "[" || call Fn.11 "%arg%" "]" || call Fn.11 "%arg%" "{" || call Fn.11 "%arg%" "}" || call Fn.11 "%arg%" "%" || call Fn.11 "%arg%" "-" || call Fn.11 "%arg%" "+" || call Fn.11 "%arg%" "=" || call Fn.11 "%arg%" ";" || call Fn.11 "%arg%" "," || call Fn.11 "%arg%" "/" || set SFN=Y
endlocal && set SFN=%SFN% && set CASE=%CASE%
goto :eof
::
:makesfnfile
setlocal && set *
set device=%~d1
set "sfnpath=%~p1"
set "argname=%~n1" &; set /a namelen=%@retval% > nul
set "argext=%~x1" &; if exist argext && set "argext=%argext:~1%"
set mode=%~2
set /u "sfntest=%~nx3"
#MAYBE#if %mode%==file && if not "%~3"=="" && set o=%~3
#SplitSemicolonSuffixOffIfSource=ISO/UDF#
if exist argext && call Fn.11 "%argext%" ";" &; raw cat --skip=0x8001 --locatei=CD001 --length=5 %device%%0+17 > nul ! raw cat --skip=0x8001 --locatei=BEA --length=3 %device%%0+17 > nul &; echo -n > (md)0x300+1 && pause --wait=0 "%argext%" > (md)0x300+1 && cat --locate=\x22 --replace=\x0A (md)0x300+1 > nul && cat --locate=; (md)0x300+1 > nul &; set /a suffixln=%?% &; cat --length=%suffixln% (md)0x300+1 | set argext= && cat --skip=%suffixln% (md)0x300+1 | set clsuffix= &; checkrange 1:32768 calc %clsuffix:~1% || set "argext=%argext%%%clsuffix%" && set clsuffix=
if exist argext && set "lfn=%argname%.%argext%" ! set "lfn=%argname%"
if exist clsuffix && set /u "lfn=%lfn%"
echo -n > (md)0x300+1
pause --wait=0 "%argname%" > (md)0x300+1
cat --locate=\x2E --replace=\x20 (md)0x300+1 > nul && set dosuffix=Y
:makesfnfileloop
cat --locate=\x22 --replace=\x0A (md)0x300+1 > nul
cat --locate=+ --replace=_ (md)0x300+1 > nul && set dosuffix=Y
#NOTLFN#cat --locate=# --replace=_ (md)0x300+1 > nul
cat --locate=[ --replace=_ (md)0x300+1 > nul && set dosuffix=Y
cat --locate=] --replace=_ (md)0x300+1 > nul && set dosuffix=Y
cat --locate={ --replace=_ (md)0x300+1 > nul && set dosuffix=Y
cat --locate=} --replace=_ (md)0x300+1 > nul && set dosuffix=Y
cat --locate=% --replace=_ (md)0x300+1 > nul && set dosuffix=Y
#NOTLFN#cat --locate=- --replace=_ (md)0x300+1 > nul
cat --locate=\x3D --replace=_ (md)0x300+1 > nul && set dosuffix=Y
cat --locate=\x3F --replace=_ (md)0x300+1 > nul && set dosuffix=Y
cat --locate=; --replace=_ (md)0x300+1 > nul && set dosuffix=Y
cat --locate=, --replace=_ (md)0x300+1 > nul && set dosuffix=Y
#OLD#cat --locate=. --replace=_ (md)0x300+1 > nul
#OLD#cat --locate= --replace=_ (md)0x300+1 > nul
cat --locate=\x20 (md)0x300+1 > nul && set dosuffix=Y && call :removespaces
if not %done%==Y && cat --skip=1 (md)0x300+1 | set name= && if exist argext && pause --wait=0 "%argext%" > (md)0x300+1 && set done=Y && goto :makesfnfileloop
if %done%==Y && cat --locate=\x20 (md)0x300+1 > nul && set dosuffix=Y && call :removespaces
if %done%==Y && cat --skip=1 (md)0x300+1 | set ext=.
if exist ext && set /u "ext=%ext%" &; set /a extlen=%@retval% > nul &; if %extlen%>=5 && set "ext=%ext:~0,4%" && set dosuffix=Y
if %mode%==name && set /u "name=%name%" &; set /a namelen=%@retval% > nul &; if not %namelen%>=9 && if not %dosuffix%==Y &; if "%name%%%ext%"=="%sfntest%" && endlocal && set "sfnfile=%sfntest%" && goto :eof ! endlocal && set sfnfile= && goto :eof
if %mode%==name && set "name=%name:~0,6%" &; if %name%%~1%ext%==%sfntest% && endlocal && set sfnfile=%sfntest% && goto :eof ! if %name%%~2%ext%==%sfntest% && endlocal && set sfnfile=%sfntest% && goto :eof ! if %name%%~3%ext%==%sfntest% && endlocal && set sfnfile=%sfntest% && goto :eof ! if %name%%~4%ext%==%sfntest% && endlocal && set sfnfile=%sfntest% && goto :eof ! set "name=%name%?"
if %mode%==name && if "%name:~-1,1%"=="?" && ATTRIBFT.LLL calclfnhash "%lfn%" &; if exist result && set /u "name=%name:~0,2%%%result%" &; if %name%%~1%ext%==%sfntest% && endlocal && set sfnfile=%sfntest% && goto :eof ! if %name%%~2%ext%==%sfntest% && endlocal && set sfnfile=%sfntest% && goto :eof ! if %name%%~3%ext%==%sfntest% && endlocal && set sfnfile=%sfntest% && goto :eof ! if %name%%~4%ext%==%sfntest% && endlocal && set sfnfile=%sfntest% && goto :eof ! if %name%%~5%ext%==%sfntest% && endlocal && set sfnfile=%sfntest% && goto :eof ! if %name%%~6%ext%==%sfntest% && endlocal && set sfnfile=%sfntest% && goto :eof ! if %name%%~7%ext%==%sfntest% && endlocal && set sfnfile=%sfntest% && goto :eof ! if %name%%~8%ext%==%sfntest% && endlocal && set sfnfile=%sfntest% && goto :eof ! if %name%%~9%ext%==%sfntest% && endlocal && set sfnfile=%sfntest% && goto :eof ! set "name=%name%?"
#BAD?????#if %mode%==name && endlocal && set sfnfile=%sfnfile%
set done= && set "name=%name%" &; set /a namelen=%@retval% > nul
if not %namelen%>=9 && if %dosuffix%==Y && set "name=%name:~0,6%"
if %namelen%>=9 && set "name=%name:~0,6%" && set dosuffix=Y
if not %dosuffix%==Y &; if not %mode%==dir && if exist %device%%%sfnpath%%%name%%%ext% && if not /i %lfn%==%name%%%ext% && set "name=%name:~0,6%" && set dosuffix=Y ! fat dir %device%%%sfnpath%%%name%%%ext% > nul && if not /i %lfn%==%name%%%ext% && set "name=%name:~0,6%" && set dosuffix=Y
if not %dosuffix%==Y &; if not %mode%==dir && if exist %device%%%sfnpath%%%name%%%ext% && if /i %lfn%==%name%%%ext% && endlocal && set sfnfile= && goto :eof ! fat dir %device%%%sfnpath%%%name%%%ext% > nul && if /i %lfn%==%name%%%ext% && endlocal && set sfnfile= && goto :eof
if %dosuffix%==Y && if not exist %device%%%sfnpath%%%name%%~1%ext% && fat dir %device%%%sfnpath%%%name%%~1%ext% > nul || set "name=%name%%~1" && set done=Y
if not exist done && if %dosuffix%==Y && if not exist %device%%%sfnpath%%%name%%~2%ext% && fat dir %device%%%sfnpath%%%name%%~2%ext% > nul || set "name=%name%%~2" && set done=Y
if not exist done && if %dosuffix%==Y && if not exist %device%%%sfnpath%%%name%%~3%ext% && fat dir %device%%%sfnpath%%%name%%~3%ext% > nul || set "name=%name%%~3" && set done=Y
if not exist done && if %dosuffix%==Y && if not exist %device%%%sfnpath%%%name%%~4%ext% && fat dir %device%%%sfnpath%%%name%%~4%ext% > nul || set "name=%name%%~4" && set done=Y
if not exist done && if %dosuffix%==Y && set "name=%name%?"
if %name:~-1,1%==? && ATTRIBFT.LLL calclfnhash "%lfn%" &; if exist result && set "name=%name:~0,2%%%result%" && set LFN=NT && set result= ! endlocal && echo Error: lfnhash not calculated for :makesfnfile && set sfnfile= && goto :eof
if %LFN%==NT && if not exist %device%%%sfnpath%%%name%%~1%ext% && fat dir %device%%%sfnpath%%%name%%~1%ext% > nul || set "name=%name%%~1" && set LFN=
if %LFN%==NT && if not exist %device%%%sfnpath%%%name%%~2%ext% && fat dir %device%%%sfnpath%%%name%%~2%ext% > nul || set "name=%name%%~2" && set LFN=
if %LFN%==NT && if not exist %device%%%sfnpath%%%name%%~3%ext% && fat dir %device%%%sfnpath%%%name%%~3%ext% > nul || set "name=%name%%~3" && set LFN=
if %LFN%==NT && if not exist %device%%%sfnpath%%%name%%~4%ext% && fat dir %device%%%sfnpath%%%name%%~4%ext% > nul || set "name=%name%%~4" && set LFN=
if %LFN%==NT && if not exist %device%%%sfnpath%%%name%%~5%ext% && fat dir %device%%%sfnpath%%%name%%~5%ext% > nul || set "name=%name%%~5" && set LFN=
if %LFN%==NT && if not exist %device%%%sfnpath%%%name%%~6%ext% && fat dir %device%%%sfnpath%%%name%%~6%ext% > nul || set "name=%name%%~6" && set LFN=
if %LFN%==NT && if not exist %device%%%sfnpath%%%name%%~7%ext% && fat dir %device%%%sfnpath%%%name%%~7%ext% > nul || set "name=%name%%~7" && set LFN=
if %LFN%==NT && if not exist %device%%%sfnpath%%%name%%~8%ext% && fat dir %device%%%sfnpath%%%name%%~8%ext% > nul || set "name=%name%%~8" && set LFN=
if %LFN%==NT && if not exist %device%%%sfnpath%%%name%%~9%ext% && fat dir %device%%%sfnpath%%%name%%~9%ext% > nul || set "name=%name%%~9" && set LFN=
if %LFN%==NT && endlocal && echo Error: all File Names %name:~0,-1%%1-9%ext% in use && goto :eof
set /u sfnfile=%name%%%ext%
endlocal && set sfnfile=%sfnfile% && set "lfn=%lfn%"
goto :eof
::
:removespaces
setlocal && set *
cat --skip=0 --locate=\x20 --length=1 (md)0x300+1 > nul && set space=1 &; if exist space && set /a remain=%space%-1 > nul
if exist space && raw dd if=(md)0x300+1 of=(md)0x300+1 bs=1 skip=%space% seek=%remain% > nul
set skip=1 && set space= && set remain=
:removespacesloop
cat --skip=%skip% --locate=\x20 --number=1 (md)0x300+1 > nul &; set space=%?% &; if exist space && set /a space=%space%+1 > nul &; set /a remain=%space%-1 > nul
if exist space && raw dd if=(md)0x300+1 of=(md)0x300+1 bs=1 skip=%space% seek=%remain% > nul
if exist space && set skip=%space% && set space= && set remain= && goto :removespacesloop
cat --skip=1 --locate=\x20 (md)0x300+1 > nul && set skip=1 && set space= && set remain= && goto :removespacesloop
endlocal
goto :eof
::
:dellfn
if not "%~3"=="" && set "message=Abort: too many arguments, argument "%~3" is not valid" && set result= && goto :eov
setlocal && set *
call :checkforbiddenchars "%~2" &; if %forbiden%==Y && endlocal && set "message=Abort: forbidden chars in "%~2"" && set result= && goto :eov
set device=%~d2 &; fat info %device% > nul || endlocal && set "message=Abort: target "%device%" is not a fat device" && set result= && goto :eov
if %device%==(md) && endlocal && set "message=Abort: device "%device%" is not valid" && set result= && goto :eov
set "path=%~p2"
set "name=%~n2" &; if not exist name && endlocal && set "message=Abort: filename is missing" && set result= && goto :eov
if "%name:~-1,1%"=="\" && set "name=%name:~0,-1%"
set "ext=%~x2" &; if "%ext%"=="." && set ext=
if "%ext:~-1,1%"=="\" && set "ext=%ext:~0,-1%"
if "%ext%"=="." && set ext=
echo -e "%path%" | set path= &; set "path=%path:~1,-1%"
echo -e "%name%" | set name= &; set "name=%name:~1,-1%"
if exist ext && echo -e "%ext%" | set ext= &; set "ext=%ext:~1,-1%"
:dellfnnospacedotloop
if exist ext && call Fn.11 "%ext:~-1,1%" " " && set "ext=%ext:~0,-1%" && goto :dellfnnospacedotloop
if not exist ext && call Fn.11 "%name:~-1,1%" " " && set "name=%name:~0,-1%" && goto :dellfnnospacedotloop
if not exist ext && call Fn.11 "%name:~-1,1%" "." && set "name=%name:~0,-1%" && goto :dellfnnospacedotloop
if "%ext%"=="." && set ext=
call :checkvalidname "%name%%%ext%" &; if %forbiden%==Y && endlocal && set "message=Abort: "%name%%%ext%" is not a valid filename" && set result= && goto :eov
ATTRIBFT.LLL getlfn "%device%%%path%%%name%%%ext%" &; if exist result && set "lfnfile=%result%" && set result= ! set "lfnfile=%name%%%ext%"
ATTRIBFT.LLL dellfn "%device%%%path%%%lfnfile%"
if exist result && set result=1
endlocal && set result=%result% && set "message==%message%"
goto :eov
::
:lastkey
beep 0 1
read 0x41a > nul &; set /A head=%@retval%&0xff > nul &; if %head%>=0x20 && set /A lastmem=%head%+0x400-2 > nul ! set /A lastmem=0x43C > nul &; read %lastmem% > nul &; set /A lastkey=%@retval%&0xff > nul
if "%~1"=="" &; if %lastkey%==0x1B && set lastkey=0x71 && goto :eof ! goto :eof
#NONEED#if not exist ls && if "%~1"=="Esc" && if not %lastkey%==0x1B && goto :eof
#NONEED#if exist ls && if "%~1"=="Esc" && if not %lastkey%==0x1B && if not %lastkey%==0x51 && if not %lastkey%==0x71 && goto :eof
if "%~1"=="Esc" && if not %lastkey%==0x1B && goto :eof
setlocal && call :Fn.4 &; endlocal && set hORG=%h% && set hINT=%h% && set vORG=%v% && set vINT=%v%
if not %hORG%==0 && setlocal && echo && call :Fn.4 &; endlocal && set hINT=%h% && set vINT=%v% &; if %vINT%==%vORG% && set /a vORG=%vORG%-1
echo -n $[0x0F][Hit Q or Esc to quit, other key to continue] && pause --test-key &; set /A lastkey=%@retval%&0xff && call :Fn.5 %hINT% %vINT% && echo -n -e \x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20 && call :Fn.5 %hORG% %vORG%
if %lastkey%==0x1B && set lastkey=0x71
if not %lastkey%==0x51 if not %lastkey%==0x71 || goto :eof ! set lastkey=
#NOTSOGOOD#call :Fn.5 %hORG% %vORG% && set lastkey= && goto :eof
goto :eof
::
:Fn.4
#-#+ call Fn.4 - h is max 0-255 chars per line, position (h,v) (0,0) is 0 and (0,1) is 256 (in grub4efi text mode 20221128+30: 16 & h max +64, on some line h is always the same ?!)
call Fn.4 ;; set /A h=%@retval% ;; set /a v=%h%>>8 ;; set /a h=%h%&0xff
#NOT?#if not exist h && set h=0
goto :eof
::
:Fn.5
call Fn.5 %~1 %~2
goto :eof
::
:help
if "%~1"=="smallhelp" && echo Loosely Linked Library to use Grubutil 'fat' with Long File Names
if "%~1"=="smallhelp" && echo Available functions: mkfile, mkdir, ren, del, copy, dir. Extra: dirx, dellfn
if "%~1"=="smallhelp" && echo Use 1: FATLFN.LLL mkfile size=N FILE
if "%~1"=="smallhelp" && echo Use 2: FATLFN.LLL mkdir FILE
if "%~1"=="smallhelp" && echo Use 3: FATLFN.LLL ren FILE1 [PATH2/]file2
if "%~1"=="smallhelp" && echo Use 4: FATLFN.LLL del [/r] FILE
if "%~1"=="smallhelp" && echo Use 5: FATLFN.LLL copy [/o:r] [/a] FILE1 [DEVICE2]/PATH2/[file2]
if "%~1"=="smallhelp" && echo Use 6: FATLFN.LLL dir [/a[-]adrsh] [DEVICE]/[PATH[/]]
if "%~1"=="smallhelp" && echo Use 7: FATLFN.LLL dirx [/a[-]adrsh] [DEVICE]/[PATH[/]]
if "%~1"=="smallhelp" && echo Use 8: FATLFN.LLL dellfn FILE
if "%~1"=="smallhelp" && echo Use 9: FATLFN.LLL help
if "%~1"=="smallhelp" && echo Dependency: ATTRIBFT.LLL && goto :eof
setlocal
pager status > nul ;; set /a pagerst=%@retval% > nul
pager on
echo FATLFN.LLL v0.2 (20241023), by deomsh
echo Function: Loosely Linked Library to use Grubutil 'fat' with Long File Names
echo Available functions: mkfile, mkdir, ren, del, copy, dir. Extra: dirx, dellfn
echo Use 1: FATLFN.LLL mkdir FILE
echo Use 2: FATLFN.LLL mkfile size=N FILE
echo Use 3: FATLFN.LLL copy [/o[:r]] [/a] FILE1 DEVICE2/PATH2/[file2]
echo Use 4: FATLFN.LLL ren FILE1 [PATH2/]file2
echo Use 5: FATLFN.LLL del [/r] FILE
echo Use 6: FATLFN.LLL dir [/a[-]adrsh] [DEVICE]/[PATH[/]]
echo Use 7: FATLFN.LLL dirx [/a[-]adrsh] [DEVICE]/[PATH[/]]
echo Use 8: FATLFN.LLL dellfn FILE
echo Use 9: FATLFN.LLL help (this screen) && echo
echo Mandatory Arguments:
echo FILE (contains DEVICE/PATH/NAME.EXT), without DEVICE/ PATH on ROOT: '/'
echo Function mkfile needs size=N => N is number of bytes, takes Nk/ Nm/ Ng bytes && echo
echo Optional Arguments:
echo /o => overwrite
echo /o:r => overwrite read-only files (extra)
echo /a => copy attributes (extra)
echo /r => delete read-only folders/ files (extra)
echo /a:[-]adrsh => selected attributes [not]only && echo
echo Remarks:
echo ren => if PATH1 and PATH2 are equal (on same DEVICE only)
echo $[] If Short File Name is renamed to Long File Name, Long File Name is added
echo $[]  (if none exist)
echo $[] If Long File Name is renamed to associated Short File Name, Long File Name is
echo $[]  removed (use <dirx> before to check)
echo $[] If 8+3 Short File Name, not fully highcase (=LFN) is renamed to same name in
echo $[]  HIGHCASE, 8+3 LFN is removed - and the other way round 8+3 LFN is added
echo ren => if PATH1 and PATH2 not equal 8+3 Short File Name is moved on same DEVICE
echo $[] If source and target share SAME 8+3 Short File Name, Long File Name moved too && echo
echo copy => with /o:r ALL found attributes of read-only file on target got restored
echo $[] With /a ALL attributes found on source-file will be set on target-file after
echo $[]  copying (FAT-source only!) && echo
echo dellfn => if Short File Name is in FILE, Long File Name is searched to delete
echo $[] All orphaned Long File Name in directory are deleted too (case-insensitive!) && echo
echo Long File Name with spaces or '=', use double qoutes: "FILE" or '\ ' or '\='
echo Except for function copy: source FAT-device only
echo Returns variable 'result=1' if success, otherwise variable message will exist
echo $[] dir with "> nul" => 'result=0' = empty directory, >=1 counts directory-entries
echo $[] dirx with "> nul" => 'result=0' = empty directory, >=1 counts Long File Names && echo
echo File Versions:
echo Grub4Dos 0.4.6a, Grubutil FAT >=15/02/2015 (must be loaded with insmod already)
echo $[] On FAT32 partition >= 4GB use Grubutil FAT from 2023, april or later
echo Grub4dos for UEFI: compatible, but soon 'Out of malloc memory' errors
echo Found not compatible with Grub4Dos 0.4.5b / Grub4Dos 0.4.5c
echo Dependency: Loosely Linked Library ATTRIBFT.LLL (>=v0.8.1)
echo A script using FATLFN.LLL must load BOTH LLL's with insmod, NO change of names! && echo
echo Examples:
echo FATLFN.LLL mkdir (hd0,0)/Directory
echo FATLFN.LLL mkdir (hd0,0)/Directory\ 2
echo FATLFN.LLL mkfile size=1k (hd0,0)/Directory/Long\ File\ Name
echo FATLFN.LLL mkfile size=1k "(hd0,0)/Directory/Long File Name 2"
echo FATLFN.LLL dir (hd0,0)/Directory
echo FATLFN.LLL dir (hd0,0)/Directory "> nul"
echo FATLFN.LLL dirx (hd0,0)/Directory "> nul"
echo FATLFN.LLL ren "(hd0,0)/Directory/Long File Name" "Directory/Longer File Name"
echo FATLFN.LLL ren "(hd0,0)/Directory/Long File Name 2" /Directory/LONGFI~2
echo FATLFN.LLL ren "(hd0,0)/Directory/Longer File Name" "Directory 2/LONGER~1"
echo FATLFN.LLL ren (hd0,0)/Directory/LONGFI~2 /Directory\ 2/Long\ File\ Name\ 2
echo FATLFN.LLL del (hd0,0)/Directory\ 2/Longer\ File\ Name
echo FATLFN.LLL dellfn "(hd0,0)/Directory 2/Long File Name 2"
echo FATLFN.LLL copy (hd0,0)/Directory\ 2/LONGFI~2 (hd0,0)/Directory/somefile
if %pagerst%>=1 && pager on ! pager off
endlocal
goto :eof
::
:eov
#NOTinLLL#debug msg=3
#NOTinLLL#delmod -l fat > nul && delmod fat > nul
#NOTinLLL#delmod -l attribft.lll > nul && delmod attribft.lll > nul
if exist message && set result=
